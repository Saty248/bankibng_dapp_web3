{"id":"1082fbc02173282c0b80f529a53bbcaa","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/loan.sol":{"content":"//SPDX-License-Identifier:MIT\npragma solidity ^0.8.19;\nerror invalid_amt();\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\ninterface ERC721TokenReceiver\n{\n\n  /**\n   * @notice The contract address is always the message sender. A wallet/broker/auction application\n   * MUST implement the wallet interface if it will accept safe transfers.\n   * @dev Handle the receipt of a NFT. The ERC721 smart contract calls this function on the\n   * recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return\n   * of other than the magic value MUST result in the transaction being reverted.\n   * Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.\n   * @param _operator The address which called `safeTransferFrom` function.\n   * @param _from The address which previously owned the token.\n   * @param _tokenId The NFT identifier which is being transferred.\n   * @param _data Additional data with no specified format.\n   * @return Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n   */\n  function onERC721Received(\n    address _operator,\n    address _from,\n    uint256 _tokenId,\n    bytes calldata _data\n  )\n    external\n    returns(bytes4);\n\n}\ncontract loan is\n  ERC721TokenReceiver {\n    IERC721 public nft;\n      event Received();\n    event Loaners(address indexed nft, uint indexed tokenId, uint indexed amt);\n    event Payers(address indexed nft, uint indexed tokenId, uint indexed amt);\n    struct loaner {\n        address nft;\n        uint tokenId;\n        uint amt;\n    }\n\n    mapping(address => loaner) loanernft;\n\n    constructor()payable{}\n\n    function giveLoan(address nftAddress, uint tokenId, uint amt) public {\n        require(checkNftOwner(nftAddress, tokenId), \"transfer owner\");\n        loaner memory user1 = loaner(nftAddress, tokenId, amt);\n        loanernft[msg.sender] = user1;\n        (bool sent /* bytes memory data*/, ) = msg.sender.call{value: amt}(\"\");\n        emit Loaners(nftAddress, tokenId, amt);\n        require(sent, \"Failed to send Ether\");\n    }\n\n    function collectLoan() public payable {\n        loaner memory user1 = loanernft[msg.sender];\n        if (user1.amt > msg.value) {\n            revert invalid_amt();\n        }\n\n        IERC721 nft1 = IERC721(user1.nft);\n        nft1.safeTransferFrom(address(this), msg.sender, user1.tokenId);\n\n        delete loanernft[msg.sender];\n        emit Payers(user1.nft, user1.tokenId, user1.amt);\n    }\n\n    function fund() public payable returns (uint) {\n        return msg.value;\n    }\n\n    function checkNftOwner(\n        address nftAdddress,\n        uint tokenId\n    ) public returns (bool) {\n        nft = IERC721(nftAdddress);\n        if (nft.ownerOf(tokenId) == address(this)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function ownerNft(uint tokenId) public view returns (address) {\n        return nft.ownerOf(tokenId);\n    }\n    function onERC721Received(\n    address _operator,\n    address _from,\n    uint256 _tokenId,\n    bytes calldata _data\n  )\n    external\n    override\n    returns(bytes4)\n  {\n    _operator;\n    _from;\n    _tokenId;\n    _data;\n    emit Received();\n    return 0x150b7a02;\n  }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[127],"IERC721":[115]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":116,"sourceUnit":128,"src":"133:47:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"IERC165","nameLocations":["271:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":127,"src":"271:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"271:7:0"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"182:67:0","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":115,"linearizedBaseContracts":[115,127],"name":"IERC721","nameLocation":"260:7:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"285:88:0","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":14,"name":"Transfer","nameLocation":"384:8:0","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:0","nodeType":"VariableDeclaration","scope":14,"src":"393:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:0","nodeType":"VariableDeclaration","scope":14,"src":"415:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:0","nodeType":"VariableDeclaration","scope":14,"src":"435:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:0"},"src":"378:82:0"},{"anonymous":false,"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"466:94:0","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":23,"name":"Approval","nameLocation":"571:8:0","nodeType":"EventDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:0","nodeType":"VariableDeclaration","scope":23,"src":"580:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:0","nodeType":"VariableDeclaration","scope":23,"src":"603:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:0","nodeType":"VariableDeclaration","scope":23,"src":"629:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:0"},"src":"565:89:0"},{"anonymous":false,"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"660:117:0","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":32,"name":"ApprovalForAll","nameLocation":"788:14:0","nodeType":"EventDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:0","nodeType":"VariableDeclaration","scope":32,"src":"803:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:0","nodeType":"VariableDeclaration","scope":32,"src":"826:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:0","nodeType":"VariableDeclaration","scope":32,"src":"852:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:0"},"src":"782:85:0"},{"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"873:76:0","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":40,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"owner","nameLocation":"981:5:0","nodeType":"VariableDeclaration","scope":40,"src":"973:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:0"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"balance","nameLocation":"1019:7:0","nodeType":"VariableDeclaration","scope":40,"src":"1011:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:0"},"scope":115,"src":"954:74:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1034:131:0","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":48,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:0","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:0","nodeType":"VariableDeclaration","scope":48,"src":"1187:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:0"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"owner","nameLocation":"1235:5:0","nodeType":"VariableDeclaration","scope":48,"src":"1227:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:0"},"scope":115,"src":"1170:72:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"1248:556:0","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"from","nameLocation":"1843:4:0","nodeType":"VariableDeclaration","scope":60,"src":"1835:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"to","nameLocation":"1857:2:0","nodeType":"VariableDeclaration","scope":60,"src":"1849:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:0","nodeType":"VariableDeclaration","scope":60,"src":"1861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"data","nameLocation":"1893:4:0","nodeType":"VariableDeclaration","scope":60,"src":"1878:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1907:0:0"},"scope":115,"src":"1809:99:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1914:687:0","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":70,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"from","nameLocation":"2640:4:0","nodeType":"VariableDeclaration","scope":70,"src":"2632:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"to","nameLocation":"2654:2:0","nodeType":"VariableDeclaration","scope":70,"src":"2646:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:0","nodeType":"VariableDeclaration","scope":70,"src":"2658:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:0"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"2683:0:0"},"scope":115,"src":"2606:78:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"2690:732:0","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:0","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"from","nameLocation":"3457:4:0","nodeType":"VariableDeclaration","scope":80,"src":"3449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"to","nameLocation":"3471:2:0","nodeType":"VariableDeclaration","scope":80,"src":"3463:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:0","nodeType":"VariableDeclaration","scope":80,"src":"3475:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"3500:0:0"},"scope":115,"src":"3427:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"3507:452:0","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":88,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"to","nameLocation":"3989:2:0","nodeType":"VariableDeclaration","scope":88,"src":"3981:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:0","nodeType":"VariableDeclaration","scope":88,"src":"3993:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:0"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[],"src":"4018:0:0"},"scope":115,"src":"3964:55:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":89,"nodeType":"StructuredDocumentation","src":"4025:309:0","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":96,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:0","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"operator","nameLocation":"4374:8:0","nodeType":"VariableDeclaration","scope":96,"src":"4366:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"approved","nameLocation":"4389:8:0","nodeType":"VariableDeclaration","scope":96,"src":"4384:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":92,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:0"},"returnParameters":{"id":95,"nodeType":"ParameterList","parameters":[],"src":"4407:0:0"},"scope":115,"src":"4339:69:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"4414:139:0","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":104,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:0","nodeType":"VariableDeclaration","scope":104,"src":"4579:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:0"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"operator","nameLocation":"4627:8:0","nodeType":"VariableDeclaration","scope":104,"src":"4619:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:0"},"scope":115,"src":"4558:79:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"4643:138:0","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":114,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"owner","nameLocation":"4820:5:0","nodeType":"VariableDeclaration","scope":114,"src":"4812:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"operator","nameLocation":"4835:8:0","nodeType":"VariableDeclaration","scope":114,"src":"4827:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:0"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":114,"src":"4868:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":111,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:0"},"scope":115,"src":"4786:88:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":116,"src":"250:4626:0","usedErrors":[]}],"src":"108:4769:0"},"id":0},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[127]},"id":128,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"125:279:1","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":127,"linearizedBaseContracts":[127],"name":"IERC165","nameLocation":"415:7:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"429:340:1","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":126,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:1","nodeType":"FunctionDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:1","nodeType":"VariableDeclaration","scope":126,"src":"801:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":120,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":126,"src":"844:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":123,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:1"},"scope":127,"src":"774:76:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":128,"src":"405:447:1","usedErrors":[]}],"src":"100:753:1"},"id":1},"contracts/loan.sol":{"ast":{"absolutePath":"contracts/loan.sol","exportedSymbols":{"ERC721TokenReceiver":[147],"IERC165":[127],"IERC721":[115],"invalid_amt":[131],"loan":[382]},"id":383,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":129,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"30:24:2"},{"errorSelector":"3d517867","id":131,"name":"invalid_amt","nameLocation":"61:11:2","nodeType":"ErrorDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[],"src":"72:2:2"},"src":"55:20:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":132,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":383,"sourceUnit":116,"src":"77:58:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721TokenReceiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":147,"linearizedBaseContracts":[147],"name":"ERC721TokenReceiver","nameLocation":"147:19:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":133,"nodeType":"StructuredDocumentation","src":"172:921:2","text":" @notice The contract address is always the message sender. A wallet/broker/auction application\n MUST implement the wallet interface if it will accept safe transfers.\n @dev Handle the receipt of a NFT. The ERC721 smart contract calls this function on the\n recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return\n of other than the magic value MUST result in the transaction being reverted.\n Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.\n @param _operator The address which called `safeTransferFrom` function.\n @param _from The address which previously owned the token.\n @param _tokenId The NFT identifier which is being transferred.\n @param _data Additional data with no specified format.\n @return Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`."},"functionSelector":"150b7a02","id":146,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"1105:16:2","nodeType":"FunctionDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"_operator","nameLocation":"1135:9:2","nodeType":"VariableDeclaration","scope":146,"src":"1127:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"_from","nameLocation":"1158:5:2","nodeType":"VariableDeclaration","scope":146,"src":"1150:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"1150:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"_tokenId","nameLocation":"1177:8:2","nodeType":"VariableDeclaration","scope":146,"src":"1169:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1169:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"_data","nameLocation":"1206:5:2","nodeType":"VariableDeclaration","scope":146,"src":"1191:20:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":140,"name":"bytes","nodeType":"ElementaryTypeName","src":"1191:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1121:94:2"},"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"1241:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":143,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1241:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1240:8:2"},"scope":147,"src":"1096:153:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":383,"src":"137:1115:2","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":148,"name":"ERC721TokenReceiver","nameLocations":["1272:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1272:19:2"},"id":149,"nodeType":"InheritanceSpecifier","src":"1272:19:2"}],"canonicalName":"loan","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":382,"linearizedBaseContracts":[382,147],"name":"loan","nameLocation":"1262:4:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"47ccca02","id":152,"mutability":"mutable","name":"nft","nameLocation":"1313:3:2","nodeType":"VariableDeclaration","scope":382,"src":"1298:18:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"},"typeName":{"id":151,"nodeType":"UserDefinedTypeName","pathNode":{"id":150,"name":"IERC721","nameLocations":["1298:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":115,"src":"1298:7:2"},"referencedDeclaration":115,"src":"1298:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"visibility":"public"},{"anonymous":false,"eventSelector":"544c765b33ca411cce832250371569244f765a17fcd217832be093f0fd5fa45b","id":154,"name":"Received","nameLocation":"1330:8:2","nodeType":"EventDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[],"src":"1338:2:2"},"src":"1324:17:2"},{"anonymous":false,"eventSelector":"bced21c9673b199eb1b9af888dbb1a5ee0dcbe690f4ec216c541d319ef97d2b7","id":162,"name":"Loaners","nameLocation":"1352:7:2","nodeType":"EventDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"indexed":true,"mutability":"mutable","name":"nft","nameLocation":"1376:3:2","nodeType":"VariableDeclaration","scope":162,"src":"1360:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"1360:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":158,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1394:7:2","nodeType":"VariableDeclaration","scope":162,"src":"1381:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint","nodeType":"ElementaryTypeName","src":"1381:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":160,"indexed":true,"mutability":"mutable","name":"amt","nameLocation":"1416:3:2","nodeType":"VariableDeclaration","scope":162,"src":"1403:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":159,"name":"uint","nodeType":"ElementaryTypeName","src":"1403:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1359:61:2"},"src":"1346:75:2"},{"anonymous":false,"eventSelector":"b91c37ff95a4037462db444e1cacb8f25552739b57ef7265db27e450784af282","id":170,"name":"Payers","nameLocation":"1432:6:2","nodeType":"EventDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"indexed":true,"mutability":"mutable","name":"nft","nameLocation":"1455:3:2","nodeType":"VariableDeclaration","scope":170,"src":"1439:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"1439:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1473:7:2","nodeType":"VariableDeclaration","scope":170,"src":"1460:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint","nodeType":"ElementaryTypeName","src":"1460:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":168,"indexed":true,"mutability":"mutable","name":"amt","nameLocation":"1495:3:2","nodeType":"VariableDeclaration","scope":170,"src":"1482:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint","nodeType":"ElementaryTypeName","src":"1482:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1438:61:2"},"src":"1426:74:2"},{"canonicalName":"loan.loaner","id":177,"members":[{"constant":false,"id":172,"mutability":"mutable","name":"nft","nameLocation":"1537:3:2","nodeType":"VariableDeclaration","scope":177,"src":"1529:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1529:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"tokenId","nameLocation":"1555:7:2","nodeType":"VariableDeclaration","scope":177,"src":"1550:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint","nodeType":"ElementaryTypeName","src":"1550:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"amt","nameLocation":"1577:3:2","nodeType":"VariableDeclaration","scope":177,"src":"1572:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint","nodeType":"ElementaryTypeName","src":"1572:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"loaner","nameLocation":"1512:6:2","nodeType":"StructDefinition","scope":382,"src":"1505:82:2","visibility":"public"},{"constant":false,"id":182,"mutability":"mutable","name":"loanernft","nameLocation":"1620:9:2","nodeType":"VariableDeclaration","scope":382,"src":"1593:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_loaner_$177_storage_$","typeString":"mapping(address => struct loan.loaner)"},"typeName":{"id":181,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"1601:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1593:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_loaner_$177_storage_$","typeString":"mapping(address => struct loan.loaner)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":180,"nodeType":"UserDefinedTypeName","pathNode":{"id":179,"name":"loaner","nameLocations":["1612:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"1612:6:2"},"referencedDeclaration":177,"src":"1612:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_storage_ptr","typeString":"struct loan.loaner"}}},"visibility":"internal"},{"body":{"id":185,"nodeType":"Block","src":"1656:2:2","statements":[]},"id":186,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"1647:2:2"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[],"src":"1656:0:2"},"scope":382,"src":"1636:22:2","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":240,"nodeType":"Block","src":"1733:356:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":197,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"1765:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":198,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"1777:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":196,"name":"checkNftOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1751:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1751:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7472616e73666572206f776e6572","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1787:16:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f","typeString":"literal_string \"transfer owner\""},"value":"transfer owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f","typeString":"literal_string \"transfer owner\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1743:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1743:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"1743:61:2"},{"assignments":[205],"declarations":[{"constant":false,"id":205,"mutability":"mutable","name":"user1","nameLocation":"1828:5:2","nodeType":"VariableDeclaration","scope":240,"src":"1814:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_memory_ptr","typeString":"struct loan.loaner"},"typeName":{"id":204,"nodeType":"UserDefinedTypeName","pathNode":{"id":203,"name":"loaner","nameLocations":["1814:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"1814:6:2"},"referencedDeclaration":177,"src":"1814:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_storage_ptr","typeString":"struct loan.loaner"}},"visibility":"internal"}],"id":211,"initialValue":{"arguments":[{"id":207,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"1843:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":208,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"1855:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":209,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"1864:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":206,"name":"loaner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"1836:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_loaner_$177_storage_ptr_$","typeString":"type(struct loan.loaner storage pointer)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1836:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_memory_ptr","typeString":"struct loan.loaner memory"}},"nodeType":"VariableDeclarationStatement","src":"1814:54:2"},{"expression":{"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":212,"name":"loanernft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1878:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_loaner_$177_storage_$","typeString":"mapping(address => struct loan.loaner storage ref)"}},"id":215,"indexExpression":{"expression":{"id":213,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1888:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1888:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1878:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_storage","typeString":"struct loan.loaner storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":216,"name":"user1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"1902:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_memory_ptr","typeString":"struct loan.loaner memory"}},"src":"1878:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_storage","typeString":"struct loan.loaner storage ref"}},"id":218,"nodeType":"ExpressionStatement","src":"1878:29:2"},{"assignments":[220,null],"declarations":[{"constant":false,"id":220,"mutability":"mutable","name":"sent","nameLocation":"1923:4:2","nodeType":"VariableDeclaration","scope":240,"src":"1918:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":219,"name":"bool","nodeType":"ElementaryTypeName","src":"1918:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":228,"initialValue":{"arguments":[{"hexValue":"","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1984:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":221,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1956:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1956:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1967:4:2","memberName":"call","nodeType":"MemberAccess","src":"1956:15:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":224,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"1979:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1956:27:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1917:70:2"},{"eventCall":{"arguments":[{"id":230,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2010:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":231,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"2022:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":232,"name":"amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2031:3:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":229,"name":"Loaners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2002:7:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2002:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":234,"nodeType":"EmitStatement","src":"1997:38:2"},{"expression":{"arguments":[{"id":236,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"2053:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e64204574686572","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2059:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""},"value":"Failed to send Ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","typeString":"literal_string \"Failed to send Ether\""}],"id":235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2045:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2045:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":239,"nodeType":"ExpressionStatement","src":"2045:37:2"}]},"functionSelector":"c4b5a990","id":241,"implemented":true,"kind":"function","modifiers":[],"name":"giveLoan","nameLocation":"1673:8:2","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"nftAddress","nameLocation":"1690:10:2","nodeType":"VariableDeclaration","scope":241,"src":"1682:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"1682:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"tokenId","nameLocation":"1707:7:2","nodeType":"VariableDeclaration","scope":241,"src":"1702:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"amt","nameLocation":"1721:3:2","nodeType":"VariableDeclaration","scope":241,"src":"1716:8:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint","nodeType":"ElementaryTypeName","src":"1716:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1681:44:2"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"1733:0:2"},"scope":382,"src":"1664:425:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":298,"nodeType":"Block","src":"2133:355:2","statements":[{"assignments":[246],"declarations":[{"constant":false,"id":246,"mutability":"mutable","name":"user1","nameLocation":"2157:5:2","nodeType":"VariableDeclaration","scope":298,"src":"2143:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_memory_ptr","typeString":"struct loan.loaner"},"typeName":{"id":245,"nodeType":"UserDefinedTypeName","pathNode":{"id":244,"name":"loaner","nameLocations":["2143:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"2143:6:2"},"referencedDeclaration":177,"src":"2143:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_storage_ptr","typeString":"struct loan.loaner"}},"visibility":"internal"}],"id":251,"initialValue":{"baseExpression":{"id":247,"name":"loanernft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2165:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_loaner_$177_storage_$","typeString":"mapping(address => struct loan.loaner storage ref)"}},"id":250,"indexExpression":{"expression":{"id":248,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2175:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2179:6:2","memberName":"sender","nodeType":"MemberAccess","src":"2175:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2165:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_storage","typeString":"struct loan.loaner storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2143:43:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":252,"name":"user1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2200:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_memory_ptr","typeString":"struct loan.loaner memory"}},"id":253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2206:3:2","memberName":"amt","nodeType":"MemberAccess","referencedDeclaration":176,"src":"2200:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":254,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2212:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2216:5:2","memberName":"value","nodeType":"MemberAccess","src":"2212:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2200:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":261,"nodeType":"IfStatement","src":"2196:72:2","trueBody":{"id":260,"nodeType":"Block","src":"2223:45:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":257,"name":"invalid_amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"2244:11:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"RevertStatement","src":"2237:20:2"}]}},{"assignments":[264],"declarations":[{"constant":false,"id":264,"mutability":"mutable","name":"nft1","nameLocation":"2286:4:2","nodeType":"VariableDeclaration","scope":298,"src":"2278:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"},"typeName":{"id":263,"nodeType":"UserDefinedTypeName","pathNode":{"id":262,"name":"IERC721","nameLocations":["2278:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":115,"src":"2278:7:2"},"referencedDeclaration":115,"src":"2278:7:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"visibility":"internal"}],"id":269,"initialValue":{"arguments":[{"expression":{"id":266,"name":"user1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2301:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_memory_ptr","typeString":"struct loan.loaner memory"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2307:3:2","memberName":"nft","nodeType":"MemberAccess","referencedDeclaration":172,"src":"2301:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":265,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2293:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$115_$","typeString":"type(contract IERC721)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"2278:33:2"},{"expression":{"arguments":[{"arguments":[{"id":275,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2351:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_loan_$382","typeString":"contract loan"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_loan_$382","typeString":"contract loan"}],"id":274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:2","typeDescriptions":{}}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2358:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2362:6:2","memberName":"sender","nodeType":"MemberAccess","src":"2358:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":279,"name":"user1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2370:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_memory_ptr","typeString":"struct loan.loaner memory"}},"id":280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2376:7:2","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":174,"src":"2370:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":270,"name":"nft1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2321:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2326:16:2","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":70,"src":"2321:21:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"2321:63:2"},{"expression":{"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2395:28:2","subExpression":{"baseExpression":{"id":283,"name":"loanernft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2402:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_loaner_$177_storage_$","typeString":"mapping(address => struct loan.loaner storage ref)"}},"id":286,"indexExpression":{"expression":{"id":284,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2412:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:6:2","memberName":"sender","nodeType":"MemberAccess","src":"2412:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2402:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_storage","typeString":"struct loan.loaner storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"2395:28:2"},{"eventCall":{"arguments":[{"expression":{"id":290,"name":"user1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2445:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_memory_ptr","typeString":"struct loan.loaner memory"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2451:3:2","memberName":"nft","nodeType":"MemberAccess","referencedDeclaration":172,"src":"2445:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":292,"name":"user1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2456:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_memory_ptr","typeString":"struct loan.loaner memory"}},"id":293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2462:7:2","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":174,"src":"2456:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":294,"name":"user1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2471:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_loaner_$177_memory_ptr","typeString":"struct loan.loaner memory"}},"id":295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2477:3:2","memberName":"amt","nodeType":"MemberAccess","referencedDeclaration":176,"src":"2471:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":289,"name":"Payers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2438:6:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2438:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":297,"nodeType":"EmitStatement","src":"2433:48:2"}]},"functionSelector":"b0857bb4","id":299,"implemented":true,"kind":"function","modifiers":[],"name":"collectLoan","nameLocation":"2104:11:2","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"2115:2:2"},"returnParameters":{"id":243,"nodeType":"ParameterList","parameters":[],"src":"2133:0:2"},"scope":382,"src":"2095:393:2","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":307,"nodeType":"Block","src":"2540:33:2","statements":[{"expression":{"expression":{"id":304,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2557:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2561:5:2","memberName":"value","nodeType":"MemberAccess","src":"2557:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":303,"id":306,"nodeType":"Return","src":"2550:16:2"}]},"functionSelector":"b60d4288","id":308,"implemented":true,"kind":"function","modifiers":[],"name":"fund","nameLocation":"2503:4:2","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[],"src":"2507:2:2"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":308,"src":"2534:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint","nodeType":"ElementaryTypeName","src":"2534:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2533:6:2"},"scope":382,"src":"2494:79:2","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":339,"nodeType":"Block","src":"2681:174:2","statements":[{"expression":{"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":317,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"2691:3:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":319,"name":"nftAdddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"2705:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":318,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2697:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$115_$","typeString":"type(contract IERC721)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2697:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"src":"2691:26:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"id":322,"nodeType":"ExpressionStatement","src":"2691:26:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":325,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"2743:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":323,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"2731:3:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2735:7:2","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":48,"src":"2731:11:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2731:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":329,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2763:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_loan_$382","typeString":"contract loan"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_loan_$382","typeString":"contract loan"}],"id":328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2755:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"2755:7:2","typeDescriptions":{}}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2755:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2731:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":337,"nodeType":"Block","src":"2812:37:2","statements":[{"expression":{"hexValue":"66616c7365","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2833:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":316,"id":336,"nodeType":"Return","src":"2826:12:2"}]},"id":338,"nodeType":"IfStatement","src":"2727:122:2","trueBody":{"id":334,"nodeType":"Block","src":"2770:36:2","statements":[{"expression":{"hexValue":"74727565","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2791:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":316,"id":333,"nodeType":"Return","src":"2784:11:2"}]}}]},"functionSelector":"0abeb5f6","id":340,"implemented":true,"kind":"function","modifiers":[],"name":"checkNftOwner","nameLocation":"2588:13:2","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"nftAdddress","nameLocation":"2619:11:2","nodeType":"VariableDeclaration","scope":340,"src":"2611:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"2611:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"tokenId","nameLocation":"2645:7:2","nodeType":"VariableDeclaration","scope":340,"src":"2640:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint","nodeType":"ElementaryTypeName","src":"2640:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2601:57:2"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":340,"src":"2675:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":314,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2674:6:2"},"scope":382,"src":"2579:276:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":352,"nodeType":"Block","src":"2923:44:2","statements":[{"expression":{"arguments":[{"id":349,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2952:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":347,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"2940:3:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$115","typeString":"contract IERC721"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2944:7:2","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":48,"src":"2940:11:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2940:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":346,"id":351,"nodeType":"Return","src":"2933:27:2"}]},"functionSelector":"21381d37","id":353,"implemented":true,"kind":"function","modifiers":[],"name":"ownerNft","nameLocation":"2870:8:2","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"tokenId","nameLocation":"2884:7:2","nodeType":"VariableDeclaration","scope":353,"src":"2879:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint","nodeType":"ElementaryTypeName","src":"2879:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2878:14:2"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2914:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"2914:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2913:9:2"},"scope":382,"src":"2861:106:2","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[146],"body":{"id":380,"nodeType":"Block","src":"3140:100:2","statements":[{"expression":{"id":367,"name":"_operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"3146:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":368,"nodeType":"ExpressionStatement","src":"3146:9:2"},{"expression":{"id":369,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"3161:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":370,"nodeType":"ExpressionStatement","src":"3161:5:2"},{"expression":{"id":371,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3172:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":372,"nodeType":"ExpressionStatement","src":"3172:8:2"},{"expression":{"id":373,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"3186:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":374,"nodeType":"ExpressionStatement","src":"3186:5:2"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":375,"name":"Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"3202:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"EmitStatement","src":"3197:15:2"},{"expression":{"hexValue":"30783135306237613032","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3225:10:2","typeDescriptions":{"typeIdentifier":"t_rational_353073666_by_1","typeString":"int_const 353073666"},"value":"0x150b7a02"},"functionReturnParameters":366,"id":379,"nodeType":"Return","src":"3218:17:2"}]},"functionSelector":"150b7a02","id":381,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"2981:16:2","nodeType":"FunctionDefinition","overrides":{"id":363,"nodeType":"OverrideSpecifier","overrides":[],"src":"3109:8:2"},"parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"_operator","nameLocation":"3011:9:2","nodeType":"VariableDeclaration","scope":381,"src":"3003:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"3003:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":357,"mutability":"mutable","name":"_from","nameLocation":"3034:5:2","nodeType":"VariableDeclaration","scope":381,"src":"3026:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"3026:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"_tokenId","nameLocation":"3053:8:2","nodeType":"VariableDeclaration","scope":381,"src":"3045:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3045:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"_data","nameLocation":"3082:5:2","nodeType":"VariableDeclaration","scope":381,"src":"3067:20:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":360,"name":"bytes","nodeType":"ElementaryTypeName","src":"3067:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2997:94:2"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":381,"src":"3130:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":364,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3130:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3129:8:2"},"scope":382,"src":"2972:268:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":383,"src":"1253:1989:2","usedErrors":[131]}],"src":"30:3212:2"},"id":2}},"contracts":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/loan.sol":{"ERC721TokenReceiver":{"abi":[{"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Handle the receipt of a NFT. The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.","params":{"_data":"Additional data with no specified format.","_from":"The address which previously owned the token.","_operator":"The address which called `safeTransferFrom` function.","_tokenId":"The NFT identifier which is being transferred."},"returns":{"_0":"Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Handle the receipt of a NFT. The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Returns `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))` unless throwing.\",\"params\":{\"_data\":\"Additional data with no specified format.\",\"_from\":\"The address which previously owned the token.\",\"_operator\":\"The address which called `safeTransferFrom` function.\",\"_tokenId\":\"The NFT identifier which is being transferred.\"},\"returns\":{\"_0\":\"Returns `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"The contract address is always the message sender. A wallet/broker/auction application MUST implement the wallet interface if it will accept safe transfers.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/loan.sol\":\"ERC721TokenReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/loan.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.19;\\nerror invalid_amt();\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ninterface ERC721TokenReceiver\\n{\\n\\n  /**\\n   * @notice The contract address is always the message sender. A wallet/broker/auction application\\n   * MUST implement the wallet interface if it will accept safe transfers.\\n   * @dev Handle the receipt of a NFT. The ERC721 smart contract calls this function on the\\n   * recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return\\n   * of other than the magic value MUST result in the transaction being reverted.\\n   * Returns `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))` unless throwing.\\n   * @param _operator The address which called `safeTransferFrom` function.\\n   * @param _from The address which previously owned the token.\\n   * @param _tokenId The NFT identifier which is being transferred.\\n   * @param _data Additional data with no specified format.\\n   * @return Returns `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\\n   */\\n  function onERC721Received(\\n    address _operator,\\n    address _from,\\n    uint256 _tokenId,\\n    bytes calldata _data\\n  )\\n    external\\n    returns(bytes4);\\n\\n}\\ncontract loan is\\n  ERC721TokenReceiver {\\n    IERC721 public nft;\\n      event Received();\\n    event Loaners(address indexed nft, uint indexed tokenId, uint indexed amt);\\n    event Payers(address indexed nft, uint indexed tokenId, uint indexed amt);\\n    struct loaner {\\n        address nft;\\n        uint tokenId;\\n        uint amt;\\n    }\\n\\n    mapping(address => loaner) loanernft;\\n\\n    constructor()payable{}\\n\\n    function giveLoan(address nftAddress, uint tokenId, uint amt) public {\\n        require(checkNftOwner(nftAddress, tokenId), \\\"transfer owner\\\");\\n        loaner memory user1 = loaner(nftAddress, tokenId, amt);\\n        loanernft[msg.sender] = user1;\\n        (bool sent /* bytes memory data*/, ) = msg.sender.call{value: amt}(\\\"\\\");\\n        emit Loaners(nftAddress, tokenId, amt);\\n        require(sent, \\\"Failed to send Ether\\\");\\n    }\\n\\n    function collectLoan() public payable {\\n        loaner memory user1 = loanernft[msg.sender];\\n        if (user1.amt > msg.value) {\\n            revert invalid_amt();\\n        }\\n\\n        IERC721 nft1 = IERC721(user1.nft);\\n        nft1.safeTransferFrom(address(this), msg.sender, user1.tokenId);\\n\\n        delete loanernft[msg.sender];\\n        emit Payers(user1.nft, user1.tokenId, user1.amt);\\n    }\\n\\n    function fund() public payable returns (uint) {\\n        return msg.value;\\n    }\\n\\n    function checkNftOwner(\\n        address nftAdddress,\\n        uint tokenId\\n    ) public returns (bool) {\\n        nft = IERC721(nftAdddress);\\n        if (nft.ownerOf(tokenId) == address(this)) {\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    function ownerNft(uint tokenId) public view returns (address) {\\n        return nft.ownerOf(tokenId);\\n    }\\n    function onERC721Received(\\n    address _operator,\\n    address _from,\\n    uint256 _tokenId,\\n    bytes calldata _data\\n  )\\n    external\\n    override\\n    returns(bytes4)\\n  {\\n    _operator;\\n    _from;\\n    _tokenId;\\n    _data;\\n    emit Received();\\n    return 0x150b7a02;\\n  }\\n}\",\"keccak256\":\"0xfe3d2371d6ae321055612550d50be10a4b595e068d20bfd5dd47c59fb67e401a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"onERC721Received(address,address,uint256,bytes)":{"notice":"The contract address is always the message sender. A wallet/broker/auction application MUST implement the wallet interface if it will accept safe transfers."}},"version":1}},"loan":{"abi":[{"inputs":[],"stateMutability":"payable","type":"constructor"},{"inputs":[],"name":"invalid_amt","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"nft","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"amt","type":"uint256"}],"name":"Loaners","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"nft","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"amt","type":"uint256"}],"name":"Payers","type":"event"},{"anonymous":false,"inputs":[],"name":"Received","type":"event"},{"inputs":[{"internalType":"address","name":"nftAdddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"checkNftOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"collectLoan","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"fund","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"}],"name":"giveLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nft","outputs":[{"internalType":"contract IERC721","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerNft","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Handle the receipt of a NFT. The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.","params":{"_data":"Additional data with no specified format.","_from":"The address which previously owned the token.","_operator":"The address which called `safeTransferFrom` function.","_tokenId":"The NFT identifier which is being transferred."},"returns":{"_0":"Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_186":{"entryPoint":null,"id":186,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052610db2806100136000396000f3fe6080604052600436106100705760003560e01c806347ccca021161004e57806347ccca021461012c578063b0857bb414610157578063b60d428814610161578063c4b5a9901461017f57610070565b80630abeb5f614610075578063150b7a02146100b257806321381d37146100ef575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906108cd565b6101a8565b6040516100a99190610928565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d491906109a8565b6102ca565b6040516100e69190610a6b565b60405180910390f35b3480156100fb57600080fd5b5061011660048036038101906101119190610a86565b61030b565b6040516101239190610ac2565b60405180910390f35b34801561013857600080fd5b506101416103af565b60405161014e9190610b3c565b60405180910390f35b61015f6103d3565b005b610169610613565b6040516101769190610b66565b60405180910390f35b34801561018b57600080fd5b506101a660048036038101906101a19190610b81565b61061b565b005b6000826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161025a9190610b66565b602060405180830381865afa158015610277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029b9190610be9565b73ffffffffffffffffffffffffffffffffffffffff16036102bf57600190506102c4565b600090505b92915050565b60007f544c765b33ca411cce832250371569244f765a17fcd217832be093f0fd5fa45b60405160405180910390a163150b7a0260e01b905095945050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016103679190610b66565b602060405180830381865afa158015610384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a89190610be9565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481525050905034816040015111156104c9576040517f3d51786700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816000015190508073ffffffffffffffffffffffffffffffffffffffff166342842e0e303385602001516040518463ffffffff1660e01b815260040161051393929190610c16565b600060405180830381600087803b15801561052d57600080fd5b505af1158015610541573d6000803e3d6000fd5b50505050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160009055505081604001518260200151836000015173ffffffffffffffffffffffffffffffffffffffff167fb91c37ff95a4037462db444e1cacb8f25552739b57ef7265db27e450784af28260405160405180910390a45050565b600034905090565b61062583836101a8565b610664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065b90610caa565b60405180910390fd5b600060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505060003373ffffffffffffffffffffffffffffffffffffffff168360405161075d90610cfb565b60006040518083038185875af1925050503d806000811461079a576040519150601f19603f3d011682016040523d82523d6000602084013e61079f565b606091505b5050905082848673ffffffffffffffffffffffffffffffffffffffff167fbced21c9673b199eb1b9af888dbb1a5ee0dcbe690f4ec216c541d319ef97d2b760405160405180910390a480610828576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081f90610d5c565b60405180910390fd5b5050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086482610839565b9050919050565b61087481610859565b811461087f57600080fd5b50565b6000813590506108918161086b565b92915050565b6000819050919050565b6108aa81610897565b81146108b557600080fd5b50565b6000813590506108c7816108a1565b92915050565b600080604083850312156108e4576108e361082f565b5b60006108f285828601610882565b9250506020610903858286016108b8565b9150509250929050565b60008115159050919050565b6109228161090d565b82525050565b600060208201905061093d6000830184610919565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261096857610967610943565b5b8235905067ffffffffffffffff81111561098557610984610948565b5b6020830191508360018202830111156109a1576109a061094d565b5b9250929050565b6000806000806000608086880312156109c4576109c361082f565b5b60006109d288828901610882565b95505060206109e388828901610882565b94505060406109f4888289016108b8565b935050606086013567ffffffffffffffff811115610a1557610a14610834565b5b610a2188828901610952565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a6581610a30565b82525050565b6000602082019050610a806000830184610a5c565b92915050565b600060208284031215610a9c57610a9b61082f565b5b6000610aaa848285016108b8565b91505092915050565b610abc81610859565b82525050565b6000602082019050610ad76000830184610ab3565b92915050565b6000819050919050565b6000610b02610afd610af884610839565b610add565b610839565b9050919050565b6000610b1482610ae7565b9050919050565b6000610b2682610b09565b9050919050565b610b3681610b1b565b82525050565b6000602082019050610b516000830184610b2d565b92915050565b610b6081610897565b82525050565b6000602082019050610b7b6000830184610b57565b92915050565b600080600060608486031215610b9a57610b9961082f565b5b6000610ba886828701610882565b9350506020610bb9868287016108b8565b9250506040610bca868287016108b8565b9150509250925092565b600081519050610be38161086b565b92915050565b600060208284031215610bff57610bfe61082f565b5b6000610c0d84828501610bd4565b91505092915050565b6000606082019050610c2b6000830186610ab3565b610c386020830185610ab3565b610c456040830184610b57565b949350505050565b600082825260208201905092915050565b7f7472616e73666572206f776e6572000000000000000000000000000000000000600082015250565b6000610c94600e83610c4d565b9150610c9f82610c5e565b602082019050919050565b60006020820190508181036000830152610cc381610c87565b9050919050565b600081905092915050565b50565b6000610ce5600083610cca565b9150610cf082610cd5565b600082019050919050565b6000610d0682610cd8565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610d46601483610c4d565b9150610d5182610d10565b602082019050919050565b60006020820190508181036000830152610d7581610d39565b905091905056fea2646970667358221220be7a14ca2176b63204883e7bd502d4c80f2915a3e2660620a67319780a081fd364736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xDB2 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47CCCA02 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xB0857BB4 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xC4B5A990 EQ PUSH2 0x17F JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0xABEB5F6 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x21381D37 EQ PUSH2 0xEF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xA86 JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x3D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x169 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2BF JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x544C765B33CA411CCE832250371569244F765A17FCD217832BE093F0FD5FA45B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x384 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP CALLVALUE DUP2 PUSH1 0x40 ADD MLOAD GT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3D51786700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x513 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB91C37FF95A4037462DB444E1CACB8F25552739B57EF7265DB27E450784AF282 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x625 DUP4 DUP4 PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65B SWAP1 PUSH2 0xCAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x75D SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x79F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP3 DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBCED21C9673B199EB1B9AF888DBB1A5EE0DCBE690F4EC216C541D319EF97D2B7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81F SWAP1 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x864 DUP3 PUSH2 0x839 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x874 DUP2 PUSH2 0x859 JUMP JUMPDEST DUP2 EQ PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x891 DUP2 PUSH2 0x86B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AA DUP2 PUSH2 0x897 JUMP JUMPDEST DUP2 EQ PUSH2 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C7 DUP2 PUSH2 0x8A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8E4 JUMPI PUSH2 0x8E3 PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8F2 DUP6 DUP3 DUP7 ADD PUSH2 0x882 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x903 DUP6 DUP3 DUP7 ADD PUSH2 0x8B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x922 DUP2 PUSH2 0x90D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x93D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x919 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x968 JUMPI PUSH2 0x967 PUSH2 0x943 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x985 JUMPI PUSH2 0x984 PUSH2 0x948 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x9A1 JUMPI PUSH2 0x9A0 PUSH2 0x94D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9C4 JUMPI PUSH2 0x9C3 PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D2 DUP9 DUP3 DUP10 ADD PUSH2 0x882 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x9E3 DUP9 DUP3 DUP10 ADD PUSH2 0x882 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x9F4 DUP9 DUP3 DUP10 ADD PUSH2 0x8B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA15 JUMPI PUSH2 0xA14 PUSH2 0x834 JUMP JUMPDEST JUMPDEST PUSH2 0xA21 DUP9 DUP3 DUP10 ADD PUSH2 0x952 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA65 DUP2 PUSH2 0xA30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9C JUMPI PUSH2 0xA9B PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAAA DUP5 DUP3 DUP6 ADD PUSH2 0x8B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xABC DUP2 PUSH2 0x859 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB02 PUSH2 0xAFD PUSH2 0xAF8 DUP5 PUSH2 0x839 JUMP JUMPDEST PUSH2 0xADD JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB14 DUP3 PUSH2 0xAE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB26 DUP3 PUSH2 0xB09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB36 DUP2 PUSH2 0xB1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB60 DUP2 PUSH2 0x897 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB7B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBA8 DUP7 DUP3 DUP8 ADD PUSH2 0x882 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBB9 DUP7 DUP3 DUP8 ADD PUSH2 0x8B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBCA DUP7 DUP3 DUP8 ADD PUSH2 0x8B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBE3 DUP2 PUSH2 0x86B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFF JUMPI PUSH2 0xBFE PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC0D DUP5 DUP3 DUP6 ADD PUSH2 0xBD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC2B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xC38 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xC45 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB57 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7472616E73666572206F776E6572000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC94 PUSH1 0xE DUP4 PUSH2 0xC4D JUMP JUMPDEST SWAP2 POP PUSH2 0xC9F DUP3 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC3 DUP2 PUSH2 0xC87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE5 PUSH1 0x0 DUP4 PUSH2 0xCCA JUMP JUMPDEST SWAP2 POP PUSH2 0xCF0 DUP3 PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD06 DUP3 PUSH2 0xCD8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204574686572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD46 PUSH1 0x14 DUP4 PUSH2 0xC4D JUMP JUMPDEST SWAP2 POP PUSH2 0xD51 DUP3 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD75 DUP2 PUSH2 0xD39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH27 0x14CA2176B63204883E7BD502D4C80F2915A3E2660620A67319780A ADDMOD 0x1F 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1253:1989:2:-:0;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@checkNftOwner_340":{"entryPoint":424,"id":340,"parameterSlots":2,"returnSlots":1},"@collectLoan_299":{"entryPoint":979,"id":299,"parameterSlots":0,"returnSlots":0},"@fund_308":{"entryPoint":1555,"id":308,"parameterSlots":0,"returnSlots":1},"@giveLoan_241":{"entryPoint":1563,"id":241,"parameterSlots":3,"returnSlots":0},"@nft_152":{"entryPoint":943,"id":152,"parameterSlots":0,"returnSlots":0},"@onERC721Received_381":{"entryPoint":714,"id":381,"parameterSlots":5,"returnSlots":1},"@ownerNft_353":{"entryPoint":779,"id":353,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2178,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":3028,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":2386,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":2232,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":3049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":2472,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2253,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":2945,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":2694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2739,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2329,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":2652,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC721_$115_to_t_address_fromStack":{"entryPoint":2861,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f_to_t_string_memory_ptr_fromStack":{"entryPoint":3207,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack":{"entryPoint":3385,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3288,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2903,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3323,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2754,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":3094,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2344,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":2667,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC721_$115__to_t_address__fromStack_reversed":{"entryPoint":2876,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3420,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2918,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3274,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3149,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2137,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2317,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":2608,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2105,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2199,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC721_$115_to_t_address":{"entryPoint":2843,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":2825,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":2791,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":2781,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":2376,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2371,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2381,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2100,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2095,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f":{"entryPoint":3166,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb":{"entryPoint":3344,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":3285,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2155,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2209,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11223:3","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:3","statements":[{"nodeType":"YulAssignment","src":"57:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:3"},"nodeType":"YulFunctionCall","src":"67:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:3"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:3","type":""}],"src":"7:75:3"},{"body":{"nodeType":"YulBlock","src":"177:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:3"},"nodeType":"YulFunctionCall","src":"187:12:3"},"nodeType":"YulExpressionStatement","src":"187:12:3"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:3"},{"body":{"nodeType":"YulBlock","src":"300:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:3"},"nodeType":"YulFunctionCall","src":"310:12:3"},"nodeType":"YulExpressionStatement","src":"310:12:3"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:3"},{"body":{"nodeType":"YulBlock","src":"379:81:3","statements":[{"nodeType":"YulAssignment","src":"389:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:3"},"nodeType":"YulFunctionCall","src":"400:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:3","type":""}],"src":"334:126:3"},{"body":{"nodeType":"YulBlock","src":"511:51:3","statements":[{"nodeType":"YulAssignment","src":"521:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:3"},"nodeType":"YulFunctionCall","src":"532:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:3","type":""}],"src":"466:96:3"},{"body":{"nodeType":"YulBlock","src":"611:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:3"},"nodeType":"YulFunctionCall","src":"670:12:3"},"nodeType":"YulExpressionStatement","src":"670:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:3"},"nodeType":"YulFunctionCall","src":"641:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:3"},"nodeType":"YulFunctionCall","src":"631:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:3"},"nodeType":"YulFunctionCall","src":"624:43:3"},"nodeType":"YulIf","src":"621:63:3"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:3","type":""}],"src":"568:122:3"},{"body":{"nodeType":"YulBlock","src":"748:87:3","statements":[{"nodeType":"YulAssignment","src":"758:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:3"},"nodeType":"YulFunctionCall","src":"767:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:3"},"nodeType":"YulFunctionCall","src":"796:33:3"},"nodeType":"YulExpressionStatement","src":"796:33:3"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:3","type":""}],"src":"696:139:3"},{"body":{"nodeType":"YulBlock","src":"886:32:3","statements":[{"nodeType":"YulAssignment","src":"896:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:3"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:3","type":""}],"src":"841:77:3"},{"body":{"nodeType":"YulBlock","src":"967:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:3"},"nodeType":"YulFunctionCall","src":"1026:12:3"},"nodeType":"YulExpressionStatement","src":"1026:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:3"},"nodeType":"YulFunctionCall","src":"997:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:3"},"nodeType":"YulFunctionCall","src":"987:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:3"},"nodeType":"YulFunctionCall","src":"980:43:3"},"nodeType":"YulIf","src":"977:63:3"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:3","type":""}],"src":"924:122:3"},{"body":{"nodeType":"YulBlock","src":"1104:87:3","statements":[{"nodeType":"YulAssignment","src":"1114:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:3"},"nodeType":"YulFunctionCall","src":"1123:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:3"},"nodeType":"YulFunctionCall","src":"1152:33:3"},"nodeType":"YulExpressionStatement","src":"1152:33:3"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:3","type":""}],"src":"1052:139:3"},{"body":{"nodeType":"YulBlock","src":"1280:391:3","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:3"},"nodeType":"YulFunctionCall","src":"1328:79:3"},"nodeType":"YulExpressionStatement","src":"1328:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:3"},"nodeType":"YulFunctionCall","src":"1297:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:3"},"nodeType":"YulFunctionCall","src":"1293:32:3"},"nodeType":"YulIf","src":"1290:119:3"},{"nodeType":"YulBlock","src":"1419:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:3"},"nodeType":"YulFunctionCall","src":"1494:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:3"},"nodeType":"YulFunctionCall","src":"1473:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:3"}]}]},{"nodeType":"YulBlock","src":"1546:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:3"},"nodeType":"YulFunctionCall","src":"1622:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:3"},"nodeType":"YulFunctionCall","src":"1601:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:3"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:3","type":""}],"src":"1197:474:3"},{"body":{"nodeType":"YulBlock","src":"1719:48:3","statements":[{"nodeType":"YulAssignment","src":"1729:32:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1754:5:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1747:6:3"},"nodeType":"YulFunctionCall","src":"1747:13:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1740:6:3"},"nodeType":"YulFunctionCall","src":"1740:21:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1729:7:3"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1701:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1711:7:3","type":""}],"src":"1677:90:3"},{"body":{"nodeType":"YulBlock","src":"1832:50:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1849:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1869:5:3"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1854:14:3"},"nodeType":"YulFunctionCall","src":"1854:21:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1842:6:3"},"nodeType":"YulFunctionCall","src":"1842:34:3"},"nodeType":"YulExpressionStatement","src":"1842:34:3"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1820:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1827:3:3","type":""}],"src":"1773:109:3"},{"body":{"nodeType":"YulBlock","src":"1980:118:3","statements":[{"nodeType":"YulAssignment","src":"1990:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2013:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:3"},"nodeType":"YulFunctionCall","src":"1998:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1990:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2064:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2077:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2088:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2073:3:3"},"nodeType":"YulFunctionCall","src":"2073:17:3"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2026:37:3"},"nodeType":"YulFunctionCall","src":"2026:65:3"},"nodeType":"YulExpressionStatement","src":"2026:65:3"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1952:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1964:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1975:4:3","type":""}],"src":"1888:210:3"},{"body":{"nodeType":"YulBlock","src":"2193:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2210:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2213:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2203:6:3"},"nodeType":"YulFunctionCall","src":"2203:12:3"},"nodeType":"YulExpressionStatement","src":"2203:12:3"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2104:117:3"},{"body":{"nodeType":"YulBlock","src":"2316:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2333:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2336:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2326:6:3"},"nodeType":"YulFunctionCall","src":"2326:12:3"},"nodeType":"YulExpressionStatement","src":"2326:12:3"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"2227:117:3"},{"body":{"nodeType":"YulBlock","src":"2439:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2456:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2459:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2449:6:3"},"nodeType":"YulFunctionCall","src":"2449:12:3"},"nodeType":"YulExpressionStatement","src":"2449:12:3"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2350:117:3"},{"body":{"nodeType":"YulBlock","src":"2560:478:3","statements":[{"body":{"nodeType":"YulBlock","src":"2609:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2611:77:3"},"nodeType":"YulFunctionCall","src":"2611:79:3"},"nodeType":"YulExpressionStatement","src":"2611:79:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2588:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2596:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:3"},"nodeType":"YulFunctionCall","src":"2584:17:3"},{"name":"end","nodeType":"YulIdentifier","src":"2603:3:3"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2580:3:3"},"nodeType":"YulFunctionCall","src":"2580:27:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2573:6:3"},"nodeType":"YulFunctionCall","src":"2573:35:3"},"nodeType":"YulIf","src":"2570:122:3"},{"nodeType":"YulAssignment","src":"2701:30:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2724:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2711:12:3"},"nodeType":"YulFunctionCall","src":"2711:20:3"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2701:6:3"}]},{"body":{"nodeType":"YulBlock","src":"2774:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2776:77:3"},"nodeType":"YulFunctionCall","src":"2776:79:3"},"nodeType":"YulExpressionStatement","src":"2776:79:3"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2746:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2754:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2743:2:3"},"nodeType":"YulFunctionCall","src":"2743:30:3"},"nodeType":"YulIf","src":"2740:117:3"},{"nodeType":"YulAssignment","src":"2866:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2882:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2890:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2878:3:3"},"nodeType":"YulFunctionCall","src":"2878:17:3"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2866:8:3"}]},{"body":{"nodeType":"YulBlock","src":"2949:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2951:77:3"},"nodeType":"YulFunctionCall","src":"2951:79:3"},"nodeType":"YulExpressionStatement","src":"2951:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2914:8:3"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2928:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2936:4:3","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2924:3:3"},"nodeType":"YulFunctionCall","src":"2924:17:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2910:3:3"},"nodeType":"YulFunctionCall","src":"2910:32:3"},{"name":"end","nodeType":"YulIdentifier","src":"2944:3:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2907:2:3"},"nodeType":"YulFunctionCall","src":"2907:41:3"},"nodeType":"YulIf","src":"2904:128:3"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2527:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"2535:3:3","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2543:8:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"2553:6:3","type":""}],"src":"2486:552:3"},{"body":{"nodeType":"YulBlock","src":"3180:827:3","statements":[{"body":{"nodeType":"YulBlock","src":"3227:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3229:77:3"},"nodeType":"YulFunctionCall","src":"3229:79:3"},"nodeType":"YulExpressionStatement","src":"3229:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3201:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"3210:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3197:3:3"},"nodeType":"YulFunctionCall","src":"3197:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"3222:3:3","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3193:3:3"},"nodeType":"YulFunctionCall","src":"3193:33:3"},"nodeType":"YulIf","src":"3190:120:3"},{"nodeType":"YulBlock","src":"3320:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3335:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3349:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3339:6:3","type":""}]},{"nodeType":"YulAssignment","src":"3364:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3399:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"3410:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3395:3:3"},"nodeType":"YulFunctionCall","src":"3395:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3419:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3374:20:3"},"nodeType":"YulFunctionCall","src":"3374:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3364:6:3"}]}]},{"nodeType":"YulBlock","src":"3447:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3462:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3476:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3466:6:3","type":""}]},{"nodeType":"YulAssignment","src":"3492:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3527:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"3538:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3523:3:3"},"nodeType":"YulFunctionCall","src":"3523:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3547:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3502:20:3"},"nodeType":"YulFunctionCall","src":"3502:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3492:6:3"}]}]},{"nodeType":"YulBlock","src":"3575:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3590:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3604:2:3","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3594:6:3","type":""}]},{"nodeType":"YulAssignment","src":"3620:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3655:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"3666:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3651:3:3"},"nodeType":"YulFunctionCall","src":"3651:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3675:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3630:20:3"},"nodeType":"YulFunctionCall","src":"3630:53:3"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3620:6:3"}]}]},{"nodeType":"YulBlock","src":"3703:297:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3718:46:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3749:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3760:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3745:3:3"},"nodeType":"YulFunctionCall","src":"3745:18:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3732:12:3"},"nodeType":"YulFunctionCall","src":"3732:32:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3722:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"3811:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3813:77:3"},"nodeType":"YulFunctionCall","src":"3813:79:3"},"nodeType":"YulExpressionStatement","src":"3813:79:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3783:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"3791:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3780:2:3"},"nodeType":"YulFunctionCall","src":"3780:30:3"},"nodeType":"YulIf","src":"3777:117:3"},{"nodeType":"YulAssignment","src":"3908:82:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3962:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"3973:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3958:3:3"},"nodeType":"YulFunctionCall","src":"3958:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3982:7:3"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3926:31:3"},"nodeType":"YulFunctionCall","src":"3926:64:3"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3908:6:3"},{"name":"value4","nodeType":"YulIdentifier","src":"3916:6:3"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3118:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3129:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3141:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3149:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3157:6:3","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3165:6:3","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3173:6:3","type":""}],"src":"3044:963:3"},{"body":{"nodeType":"YulBlock","src":"4057:105:3","statements":[{"nodeType":"YulAssignment","src":"4067:89:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4082:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"4089:66:3","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4078:3:3"},"nodeType":"YulFunctionCall","src":"4078:78:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4067:7:3"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4039:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4049:7:3","type":""}],"src":"4013:149:3"},{"body":{"nodeType":"YulBlock","src":"4231:52:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4248:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4270:5:3"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"4253:16:3"},"nodeType":"YulFunctionCall","src":"4253:23:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4241:6:3"},"nodeType":"YulFunctionCall","src":"4241:36:3"},"nodeType":"YulExpressionStatement","src":"4241:36:3"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4219:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4226:3:3","type":""}],"src":"4168:115:3"},{"body":{"nodeType":"YulBlock","src":"4385:122:3","statements":[{"nodeType":"YulAssignment","src":"4395:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:3"},"nodeType":"YulFunctionCall","src":"4403:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4395:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4473:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4486:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4497:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4482:3:3"},"nodeType":"YulFunctionCall","src":"4482:17:3"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"4431:41:3"},"nodeType":"YulFunctionCall","src":"4431:69:3"},"nodeType":"YulExpressionStatement","src":"4431:69:3"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4357:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4369:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4380:4:3","type":""}],"src":"4289:218:3"},{"body":{"nodeType":"YulBlock","src":"4579:263:3","statements":[{"body":{"nodeType":"YulBlock","src":"4625:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4627:77:3"},"nodeType":"YulFunctionCall","src":"4627:79:3"},"nodeType":"YulExpressionStatement","src":"4627:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4600:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"4609:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4596:3:3"},"nodeType":"YulFunctionCall","src":"4596:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"4621:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4592:3:3"},"nodeType":"YulFunctionCall","src":"4592:32:3"},"nodeType":"YulIf","src":"4589:119:3"},{"nodeType":"YulBlock","src":"4718:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"4733:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"4747:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4737:6:3","type":""}]},{"nodeType":"YulAssignment","src":"4762:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"4808:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:3"},"nodeType":"YulFunctionCall","src":"4793:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4817:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4772:20:3"},"nodeType":"YulFunctionCall","src":"4772:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4762:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4549:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4560:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4572:6:3","type":""}],"src":"4513:329:3"},{"body":{"nodeType":"YulBlock","src":"4913:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4930:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4953:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4935:17:3"},"nodeType":"YulFunctionCall","src":"4935:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4923:6:3"},"nodeType":"YulFunctionCall","src":"4923:37:3"},"nodeType":"YulExpressionStatement","src":"4923:37:3"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4901:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4908:3:3","type":""}],"src":"4848:118:3"},{"body":{"nodeType":"YulBlock","src":"5070:124:3","statements":[{"nodeType":"YulAssignment","src":"5080:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5092:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5103:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5088:3:3"},"nodeType":"YulFunctionCall","src":"5088:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5080:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5160:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5173:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5184:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5169:3:3"},"nodeType":"YulFunctionCall","src":"5169:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5116:43:3"},"nodeType":"YulFunctionCall","src":"5116:71:3"},"nodeType":"YulExpressionStatement","src":"5116:71:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5042:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5054:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5065:4:3","type":""}],"src":"4972:222:3"},{"body":{"nodeType":"YulBlock","src":"5232:28:3","statements":[{"nodeType":"YulAssignment","src":"5242:12:3","value":{"name":"value","nodeType":"YulIdentifier","src":"5249:5:3"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5242:3:3"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5218:5:3","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5228:3:3","type":""}],"src":"5200:60:3"},{"body":{"nodeType":"YulBlock","src":"5326:82:3","statements":[{"nodeType":"YulAssignment","src":"5336:66:3","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5394:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5376:17:3"},"nodeType":"YulFunctionCall","src":"5376:24:3"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5367:8:3"},"nodeType":"YulFunctionCall","src":"5367:34:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5349:17:3"},"nodeType":"YulFunctionCall","src":"5349:53:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5336:9:3"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5306:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5316:9:3","type":""}],"src":"5266:142:3"},{"body":{"nodeType":"YulBlock","src":"5474:66:3","statements":[{"nodeType":"YulAssignment","src":"5484:50:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5528:5:3"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"5497:30:3"},"nodeType":"YulFunctionCall","src":"5497:37:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5484:9:3"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5454:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5464:9:3","type":""}],"src":"5414:126:3"},{"body":{"nodeType":"YulBlock","src":"5621:66:3","statements":[{"nodeType":"YulAssignment","src":"5631:50:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5675:5:3"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"5644:30:3"},"nodeType":"YulFunctionCall","src":"5644:37:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5631:9:3"}]}]},"name":"convert_t_contract$_IERC721_$115_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5601:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5611:9:3","type":""}],"src":"5546:141:3"},{"body":{"nodeType":"YulBlock","src":"5773:81:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5790:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5841:5:3"}],"functionName":{"name":"convert_t_contract$_IERC721_$115_to_t_address","nodeType":"YulIdentifier","src":"5795:45:3"},"nodeType":"YulFunctionCall","src":"5795:52:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5783:6:3"},"nodeType":"YulFunctionCall","src":"5783:65:3"},"nodeType":"YulExpressionStatement","src":"5783:65:3"}]},"name":"abi_encode_t_contract$_IERC721_$115_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5761:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5768:3:3","type":""}],"src":"5693:161:3"},{"body":{"nodeType":"YulBlock","src":"5973:139:3","statements":[{"nodeType":"YulAssignment","src":"5983:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5995:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6006:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5991:3:3"},"nodeType":"YulFunctionCall","src":"5991:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5983:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6078:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6091:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6102:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6087:3:3"},"nodeType":"YulFunctionCall","src":"6087:17:3"}],"functionName":{"name":"abi_encode_t_contract$_IERC721_$115_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6019:58:3"},"nodeType":"YulFunctionCall","src":"6019:86:3"},"nodeType":"YulExpressionStatement","src":"6019:86:3"}]},"name":"abi_encode_tuple_t_contract$_IERC721_$115__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5945:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5957:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5968:4:3","type":""}],"src":"5860:252:3"},{"body":{"nodeType":"YulBlock","src":"6183:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6200:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6223:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6205:17:3"},"nodeType":"YulFunctionCall","src":"6205:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6193:6:3"},"nodeType":"YulFunctionCall","src":"6193:37:3"},"nodeType":"YulExpressionStatement","src":"6193:37:3"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6171:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6178:3:3","type":""}],"src":"6118:118:3"},{"body":{"nodeType":"YulBlock","src":"6340:124:3","statements":[{"nodeType":"YulAssignment","src":"6350:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6362:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6373:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6358:3:3"},"nodeType":"YulFunctionCall","src":"6358:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6350:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6430:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6443:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6454:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6439:3:3"},"nodeType":"YulFunctionCall","src":"6439:17:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6386:43:3"},"nodeType":"YulFunctionCall","src":"6386:71:3"},"nodeType":"YulExpressionStatement","src":"6386:71:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6312:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6324:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6335:4:3","type":""}],"src":"6242:222:3"},{"body":{"nodeType":"YulBlock","src":"6570:519:3","statements":[{"body":{"nodeType":"YulBlock","src":"6616:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6618:77:3"},"nodeType":"YulFunctionCall","src":"6618:79:3"},"nodeType":"YulExpressionStatement","src":"6618:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6591:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"6600:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6587:3:3"},"nodeType":"YulFunctionCall","src":"6587:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"6612:2:3","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6583:3:3"},"nodeType":"YulFunctionCall","src":"6583:32:3"},"nodeType":"YulIf","src":"6580:119:3"},{"nodeType":"YulBlock","src":"6709:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"6724:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"6738:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6728:6:3","type":""}]},{"nodeType":"YulAssignment","src":"6753:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6788:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"6799:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6784:3:3"},"nodeType":"YulFunctionCall","src":"6784:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6808:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6763:20:3"},"nodeType":"YulFunctionCall","src":"6763:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6753:6:3"}]}]},{"nodeType":"YulBlock","src":"6836:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"6851:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"6865:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6855:6:3","type":""}]},{"nodeType":"YulAssignment","src":"6881:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6916:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"6927:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6912:3:3"},"nodeType":"YulFunctionCall","src":"6912:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6936:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6891:20:3"},"nodeType":"YulFunctionCall","src":"6891:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6881:6:3"}]}]},{"nodeType":"YulBlock","src":"6964:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"6979:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"6993:2:3","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6983:6:3","type":""}]},{"nodeType":"YulAssignment","src":"7009:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7044:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"7055:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7040:3:3"},"nodeType":"YulFunctionCall","src":"7040:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7064:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7019:20:3"},"nodeType":"YulFunctionCall","src":"7019:53:3"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7009:6:3"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6524:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6535:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6547:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6555:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6563:6:3","type":""}],"src":"6470:619:3"},{"body":{"nodeType":"YulBlock","src":"7158:80:3","statements":[{"nodeType":"YulAssignment","src":"7168:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7183:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7177:5:3"},"nodeType":"YulFunctionCall","src":"7177:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7168:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7226:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"7199:26:3"},"nodeType":"YulFunctionCall","src":"7199:33:3"},"nodeType":"YulExpressionStatement","src":"7199:33:3"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7136:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"7144:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7152:5:3","type":""}],"src":"7095:143:3"},{"body":{"nodeType":"YulBlock","src":"7321:274:3","statements":[{"body":{"nodeType":"YulBlock","src":"7367:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7369:77:3"},"nodeType":"YulFunctionCall","src":"7369:79:3"},"nodeType":"YulExpressionStatement","src":"7369:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7342:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"7351:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7338:3:3"},"nodeType":"YulFunctionCall","src":"7338:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"7363:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7334:3:3"},"nodeType":"YulFunctionCall","src":"7334:32:3"},"nodeType":"YulIf","src":"7331:119:3"},{"nodeType":"YulBlock","src":"7460:128:3","statements":[{"nodeType":"YulVariableDeclaration","src":"7475:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"7489:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7479:6:3","type":""}]},{"nodeType":"YulAssignment","src":"7504:74:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7550:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"7561:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7546:3:3"},"nodeType":"YulFunctionCall","src":"7546:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7570:7:3"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"7514:31:3"},"nodeType":"YulFunctionCall","src":"7514:64:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7504:6:3"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7291:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7302:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7314:6:3","type":""}],"src":"7244:351:3"},{"body":{"nodeType":"YulBlock","src":"7755:288:3","statements":[{"nodeType":"YulAssignment","src":"7765:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7777:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7788:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7773:3:3"},"nodeType":"YulFunctionCall","src":"7773:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7765:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7845:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7858:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7869:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7854:3:3"},"nodeType":"YulFunctionCall","src":"7854:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7801:43:3"},"nodeType":"YulFunctionCall","src":"7801:71:3"},"nodeType":"YulExpressionStatement","src":"7801:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7926:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7939:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7950:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7935:3:3"},"nodeType":"YulFunctionCall","src":"7935:18:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7882:43:3"},"nodeType":"YulFunctionCall","src":"7882:72:3"},"nodeType":"YulExpressionStatement","src":"7882:72:3"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8008:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8021:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"8032:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8017:3:3"},"nodeType":"YulFunctionCall","src":"8017:18:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7964:43:3"},"nodeType":"YulFunctionCall","src":"7964:72:3"},"nodeType":"YulExpressionStatement","src":"7964:72:3"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7711:9:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7723:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7731:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7739:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7750:4:3","type":""}],"src":"7601:442:3"},{"body":{"nodeType":"YulBlock","src":"8145:73:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8162:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"8167:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8155:6:3"},"nodeType":"YulFunctionCall","src":"8155:19:3"},"nodeType":"YulExpressionStatement","src":"8155:19:3"},{"nodeType":"YulAssignment","src":"8183:29:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8202:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"8207:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8198:3:3"},"nodeType":"YulFunctionCall","src":"8198:14:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8183:11:3"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8117:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"8122:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8133:11:3","type":""}],"src":"8049:169:3"},{"body":{"nodeType":"YulBlock","src":"8330:58:3","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8352:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"8360:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8348:3:3"},"nodeType":"YulFunctionCall","src":"8348:14:3"},{"hexValue":"7472616e73666572206f776e6572","kind":"string","nodeType":"YulLiteral","src":"8364:16:3","type":"","value":"transfer owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8341:6:3"},"nodeType":"YulFunctionCall","src":"8341:40:3"},"nodeType":"YulExpressionStatement","src":"8341:40:3"}]},"name":"store_literal_in_memory_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8322:6:3","type":""}],"src":"8224:164:3"},{"body":{"nodeType":"YulBlock","src":"8540:220:3","statements":[{"nodeType":"YulAssignment","src":"8550:74:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8616:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"8621:2:3","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8557:58:3"},"nodeType":"YulFunctionCall","src":"8557:67:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8550:3:3"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8722:3:3"}],"functionName":{"name":"store_literal_in_memory_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f","nodeType":"YulIdentifier","src":"8633:88:3"},"nodeType":"YulFunctionCall","src":"8633:93:3"},"nodeType":"YulExpressionStatement","src":"8633:93:3"},{"nodeType":"YulAssignment","src":"8735:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8746:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"8751:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8742:3:3"},"nodeType":"YulFunctionCall","src":"8742:12:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8735:3:3"}]}]},"name":"abi_encode_t_stringliteral_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8528:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8536:3:3","type":""}],"src":"8394:366:3"},{"body":{"nodeType":"YulBlock","src":"8937:248:3","statements":[{"nodeType":"YulAssignment","src":"8947:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8959:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"8970:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8955:3:3"},"nodeType":"YulFunctionCall","src":"8955:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8947:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8994:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"9005:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8990:3:3"},"nodeType":"YulFunctionCall","src":"8990:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9013:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"9019:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9009:3:3"},"nodeType":"YulFunctionCall","src":"9009:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8983:6:3"},"nodeType":"YulFunctionCall","src":"8983:47:3"},"nodeType":"YulExpressionStatement","src":"8983:47:3"},{"nodeType":"YulAssignment","src":"9039:139:3","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9173:4:3"}],"functionName":{"name":"abi_encode_t_stringliteral_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9047:124:3"},"nodeType":"YulFunctionCall","src":"9047:131:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9039:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8917:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8932:4:3","type":""}],"src":"8766:419:3"},{"body":{"nodeType":"YulBlock","src":"9304:34:3","statements":[{"nodeType":"YulAssignment","src":"9314:18:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"9329:3:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9314:11:3"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9276:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"9281:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9292:11:3","type":""}],"src":"9191:147:3"},{"body":{"nodeType":"YulBlock","src":"9450:8:3","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9442:6:3","type":""}],"src":"9344:114:3"},{"body":{"nodeType":"YulBlock","src":"9627:235:3","statements":[{"nodeType":"YulAssignment","src":"9637:90:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9720:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"9725:1:3","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9644:75:3"},"nodeType":"YulFunctionCall","src":"9644:83:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9637:3:3"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9825:3:3"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"9736:88:3"},"nodeType":"YulFunctionCall","src":"9736:93:3"},"nodeType":"YulExpressionStatement","src":"9736:93:3"},{"nodeType":"YulAssignment","src":"9838:18:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9849:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"9854:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9845:3:3"},"nodeType":"YulFunctionCall","src":"9845:11:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9838:3:3"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9615:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9623:3:3","type":""}],"src":"9464:398:3"},{"body":{"nodeType":"YulBlock","src":"10056:191:3","statements":[{"nodeType":"YulAssignment","src":"10067:154:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10217:3:3"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10074:141:3"},"nodeType":"YulFunctionCall","src":"10074:147:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10067:3:3"}]},{"nodeType":"YulAssignment","src":"10231:10:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"10238:3:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10231:3:3"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10043:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10052:3:3","type":""}],"src":"9868:379:3"},{"body":{"nodeType":"YulBlock","src":"10359:64:3","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10381:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"10389:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10377:3:3"},"nodeType":"YulFunctionCall","src":"10377:14:3"},{"hexValue":"4661696c656420746f2073656e64204574686572","kind":"string","nodeType":"YulLiteral","src":"10393:22:3","type":"","value":"Failed to send Ether"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10370:6:3"},"nodeType":"YulFunctionCall","src":"10370:46:3"},"nodeType":"YulExpressionStatement","src":"10370:46:3"}]},"name":"store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10351:6:3","type":""}],"src":"10253:170:3"},{"body":{"nodeType":"YulBlock","src":"10575:220:3","statements":[{"nodeType":"YulAssignment","src":"10585:74:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10651:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"10656:2:3","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10592:58:3"},"nodeType":"YulFunctionCall","src":"10592:67:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10585:3:3"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10757:3:3"}],"functionName":{"name":"store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb","nodeType":"YulIdentifier","src":"10668:88:3"},"nodeType":"YulFunctionCall","src":"10668:93:3"},"nodeType":"YulExpressionStatement","src":"10668:93:3"},{"nodeType":"YulAssignment","src":"10770:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10781:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"10786:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10777:3:3"},"nodeType":"YulFunctionCall","src":"10777:12:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10770:3:3"}]}]},"name":"abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10563:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10571:3:3","type":""}],"src":"10429:366:3"},{"body":{"nodeType":"YulBlock","src":"10972:248:3","statements":[{"nodeType":"YulAssignment","src":"10982:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10994:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"11005:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10990:3:3"},"nodeType":"YulFunctionCall","src":"10990:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10982:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11029:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"11040:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11025:3:3"},"nodeType":"YulFunctionCall","src":"11025:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11048:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"11054:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11044:3:3"},"nodeType":"YulFunctionCall","src":"11044:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11018:6:3"},"nodeType":"YulFunctionCall","src":"11018:47:3"},"nodeType":"YulExpressionStatement","src":"11018:47:3"},{"nodeType":"YulAssignment","src":"11074:139:3","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11208:4:3"}],"functionName":{"name":"abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11082:124:3"},"nodeType":"YulFunctionCall","src":"11082:131:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11074:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10952:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10967:4:3","type":""}],"src":"10801:419:3"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$115_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$115_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$115_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$115__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$115_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f(memPtr) {\n\n        mstore(add(memPtr, 0), \"transfer owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15be5b4ab0c0ee6edc03a2af56ce3f9c2ad5b413d8b1c66da4e582d9b89c434f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send Ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100705760003560e01c806347ccca021161004e57806347ccca021461012c578063b0857bb414610157578063b60d428814610161578063c4b5a9901461017f57610070565b80630abeb5f614610075578063150b7a02146100b257806321381d37146100ef575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906108cd565b6101a8565b6040516100a99190610928565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d491906109a8565b6102ca565b6040516100e69190610a6b565b60405180910390f35b3480156100fb57600080fd5b5061011660048036038101906101119190610a86565b61030b565b6040516101239190610ac2565b60405180910390f35b34801561013857600080fd5b506101416103af565b60405161014e9190610b3c565b60405180910390f35b61015f6103d3565b005b610169610613565b6040516101769190610b66565b60405180910390f35b34801561018b57600080fd5b506101a660048036038101906101a19190610b81565b61061b565b005b6000826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161025a9190610b66565b602060405180830381865afa158015610277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029b9190610be9565b73ffffffffffffffffffffffffffffffffffffffff16036102bf57600190506102c4565b600090505b92915050565b60007f544c765b33ca411cce832250371569244f765a17fcd217832be093f0fd5fa45b60405160405180910390a163150b7a0260e01b905095945050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016103679190610b66565b602060405180830381865afa158015610384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a89190610be9565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481525050905034816040015111156104c9576040517f3d51786700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816000015190508073ffffffffffffffffffffffffffffffffffffffff166342842e0e303385602001516040518463ffffffff1660e01b815260040161051393929190610c16565b600060405180830381600087803b15801561052d57600080fd5b505af1158015610541573d6000803e3d6000fd5b50505050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160009055505081604001518260200151836000015173ffffffffffffffffffffffffffffffffffffffff167fb91c37ff95a4037462db444e1cacb8f25552739b57ef7265db27e450784af28260405160405180910390a45050565b600034905090565b61062583836101a8565b610664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065b90610caa565b60405180910390fd5b600060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015590505060003373ffffffffffffffffffffffffffffffffffffffff168360405161075d90610cfb565b60006040518083038185875af1925050503d806000811461079a576040519150601f19603f3d011682016040523d82523d6000602084013e61079f565b606091505b5050905082848673ffffffffffffffffffffffffffffffffffffffff167fbced21c9673b199eb1b9af888dbb1a5ee0dcbe690f4ec216c541d319ef97d2b760405160405180910390a480610828576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081f90610d5c565b60405180910390fd5b5050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061086482610839565b9050919050565b61087481610859565b811461087f57600080fd5b50565b6000813590506108918161086b565b92915050565b6000819050919050565b6108aa81610897565b81146108b557600080fd5b50565b6000813590506108c7816108a1565b92915050565b600080604083850312156108e4576108e361082f565b5b60006108f285828601610882565b9250506020610903858286016108b8565b9150509250929050565b60008115159050919050565b6109228161090d565b82525050565b600060208201905061093d6000830184610919565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261096857610967610943565b5b8235905067ffffffffffffffff81111561098557610984610948565b5b6020830191508360018202830111156109a1576109a061094d565b5b9250929050565b6000806000806000608086880312156109c4576109c361082f565b5b60006109d288828901610882565b95505060206109e388828901610882565b94505060406109f4888289016108b8565b935050606086013567ffffffffffffffff811115610a1557610a14610834565b5b610a2188828901610952565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a6581610a30565b82525050565b6000602082019050610a806000830184610a5c565b92915050565b600060208284031215610a9c57610a9b61082f565b5b6000610aaa848285016108b8565b91505092915050565b610abc81610859565b82525050565b6000602082019050610ad76000830184610ab3565b92915050565b6000819050919050565b6000610b02610afd610af884610839565b610add565b610839565b9050919050565b6000610b1482610ae7565b9050919050565b6000610b2682610b09565b9050919050565b610b3681610b1b565b82525050565b6000602082019050610b516000830184610b2d565b92915050565b610b6081610897565b82525050565b6000602082019050610b7b6000830184610b57565b92915050565b600080600060608486031215610b9a57610b9961082f565b5b6000610ba886828701610882565b9350506020610bb9868287016108b8565b9250506040610bca868287016108b8565b9150509250925092565b600081519050610be38161086b565b92915050565b600060208284031215610bff57610bfe61082f565b5b6000610c0d84828501610bd4565b91505092915050565b6000606082019050610c2b6000830186610ab3565b610c386020830185610ab3565b610c456040830184610b57565b949350505050565b600082825260208201905092915050565b7f7472616e73666572206f776e6572000000000000000000000000000000000000600082015250565b6000610c94600e83610c4d565b9150610c9f82610c5e565b602082019050919050565b60006020820190508181036000830152610cc381610c87565b9050919050565b600081905092915050565b50565b6000610ce5600083610cca565b9150610cf082610cd5565b600082019050919050565b6000610d0682610cd8565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610d46601483610c4d565b9150610d5182610d10565b602082019050919050565b60006020820190508181036000830152610d7581610d39565b905091905056fea2646970667358221220be7a14ca2176b63204883e7bd502d4c80f2915a3e2660620a67319780a081fd364736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47CCCA02 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xB0857BB4 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xC4B5A990 EQ PUSH2 0x17F JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0xABEB5F6 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x21381D37 EQ PUSH2 0xEF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xA86 JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH2 0x3D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x169 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2BF JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x544C765B33CA411CCE832250371569244F765A17FCD217832BE093F0FD5FA45B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x384 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP CALLVALUE DUP2 PUSH1 0x40 ADD MLOAD GT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3D51786700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x513 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB91C37FF95A4037462DB444E1CACB8F25552739B57EF7265DB27E450784AF282 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x625 DUP4 DUP4 PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65B SWAP1 PUSH2 0xCAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x75D SWAP1 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x79F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP3 DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBCED21C9673B199EB1B9AF888DBB1A5EE0DCBE690F4EC216C541D319EF97D2B7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 PUSH2 0x828 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81F SWAP1 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x864 DUP3 PUSH2 0x839 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x874 DUP2 PUSH2 0x859 JUMP JUMPDEST DUP2 EQ PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x891 DUP2 PUSH2 0x86B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AA DUP2 PUSH2 0x897 JUMP JUMPDEST DUP2 EQ PUSH2 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C7 DUP2 PUSH2 0x8A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8E4 JUMPI PUSH2 0x8E3 PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8F2 DUP6 DUP3 DUP7 ADD PUSH2 0x882 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x903 DUP6 DUP3 DUP7 ADD PUSH2 0x8B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x922 DUP2 PUSH2 0x90D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x93D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x919 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x968 JUMPI PUSH2 0x967 PUSH2 0x943 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x985 JUMPI PUSH2 0x984 PUSH2 0x948 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x9A1 JUMPI PUSH2 0x9A0 PUSH2 0x94D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9C4 JUMPI PUSH2 0x9C3 PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D2 DUP9 DUP3 DUP10 ADD PUSH2 0x882 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x9E3 DUP9 DUP3 DUP10 ADD PUSH2 0x882 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x9F4 DUP9 DUP3 DUP10 ADD PUSH2 0x8B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA15 JUMPI PUSH2 0xA14 PUSH2 0x834 JUMP JUMPDEST JUMPDEST PUSH2 0xA21 DUP9 DUP3 DUP10 ADD PUSH2 0x952 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA65 DUP2 PUSH2 0xA30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9C JUMPI PUSH2 0xA9B PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAAA DUP5 DUP3 DUP6 ADD PUSH2 0x8B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xABC DUP2 PUSH2 0x859 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB02 PUSH2 0xAFD PUSH2 0xAF8 DUP5 PUSH2 0x839 JUMP JUMPDEST PUSH2 0xADD JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB14 DUP3 PUSH2 0xAE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB26 DUP3 PUSH2 0xB09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB36 DUP2 PUSH2 0xB1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB60 DUP2 PUSH2 0x897 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB7B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBA8 DUP7 DUP3 DUP8 ADD PUSH2 0x882 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBB9 DUP7 DUP3 DUP8 ADD PUSH2 0x8B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBCA DUP7 DUP3 DUP8 ADD PUSH2 0x8B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBE3 DUP2 PUSH2 0x86B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFF JUMPI PUSH2 0xBFE PUSH2 0x82F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC0D DUP5 DUP3 DUP6 ADD PUSH2 0xBD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC2B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xC38 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0xC45 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB57 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7472616E73666572206F776E6572000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC94 PUSH1 0xE DUP4 PUSH2 0xC4D JUMP JUMPDEST SWAP2 POP PUSH2 0xC9F DUP3 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC3 DUP2 PUSH2 0xC87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE5 PUSH1 0x0 DUP4 PUSH2 0xCCA JUMP JUMPDEST SWAP2 POP PUSH2 0xCF0 DUP3 PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD06 DUP3 PUSH2 0xCD8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204574686572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD46 PUSH1 0x14 DUP4 PUSH2 0xC4D JUMP JUMPDEST SWAP2 POP PUSH2 0xD51 DUP3 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD75 DUP2 PUSH2 0xD39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH27 0x14CA2176B63204883E7BD502D4C80F2915A3E2660620A67319780A ADDMOD 0x1F 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1253:1989:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2579:276;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2972:268;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2861:106;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1298:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2095:393;;;:::i;:::-;;2494:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1664:425;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2579:276;2675:4;2705:11;2691:3;;:26;;;;;;;;;;;;;;;;;;2763:4;2731:37;;:3;;;;;;;;;;:11;;;2743:7;2731:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;;2727:122;;2791:4;2784:11;;;;2727:122;2833:5;2826:12;;2579:276;;;;;:::o;2972:268::-;3130:6;3202:10;;;;;;;;;;3225;3218:17;;;;2972:268;;;;;;;:::o;2861:106::-;2914:7;2940:3;;;;;;;;;;;:11;;;2952:7;2940:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2933:27;;2861:106;;;:::o;1298:18::-;;;;;;;;;;;;:::o;2095:393::-;2143:19;2165:9;:21;2175:10;2165:21;;;;;;;;;;;;;;;2143:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2212:9;2200:5;:9;;;:21;2196:72;;;2244:13;;;;;;;;;;;;;;2196:72;2278:12;2301:5;:9;;;2278:33;;2321:4;:21;;;2351:4;2358:10;2370:5;:13;;;2321:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2402:9;:21;2412:10;2402:21;;;;;;;;;;;;;;;;2395:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:5;:9;;;2456:5;:13;;;2445:5;:9;;;2438:43;;;;;;;;;;;;2133:355;;2095:393::o;2494:79::-;2534:4;2557:9;2550:16;;2494:79;:::o;1664:425::-;1751:34;1765:10;1777:7;1751:13;:34::i;:::-;1743:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1814:19;1836:32;;;;;;;;1843:10;1836:32;;;;;;1855:7;1836:32;;;;1864:3;1836:32;;;1814:54;;1902:5;1878:9;:21;1888:10;1878:21;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:9;1956:10;:15;;1979:3;1956:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1917:70;;;2031:3;2022:7;2010:10;2002:33;;;;;;;;;;;;2053:4;2045:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;1733:356;;1664:425;;;:::o;88:117:3:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:117::-;2213:1;2210;2203:12;2227:117;2336:1;2333;2326:12;2350:117;2459:1;2456;2449:12;2486:552;2543:8;2553:6;2603:3;2596:4;2588:6;2584:17;2580:27;2570:122;;2611:79;;:::i;:::-;2570:122;2724:6;2711:20;2701:30;;2754:18;2746:6;2743:30;2740:117;;;2776:79;;:::i;:::-;2740:117;2890:4;2882:6;2878:17;2866:29;;2944:3;2936:4;2928:6;2924:17;2914:8;2910:32;2907:41;2904:128;;;2951:79;;:::i;:::-;2904:128;2486:552;;;;;:::o;3044:963::-;3141:6;3149;3157;3165;3173;3222:3;3210:9;3201:7;3197:23;3193:33;3190:120;;;3229:79;;:::i;:::-;3190:120;3349:1;3374:53;3419:7;3410:6;3399:9;3395:22;3374:53;:::i;:::-;3364:63;;3320:117;3476:2;3502:53;3547:7;3538:6;3527:9;3523:22;3502:53;:::i;:::-;3492:63;;3447:118;3604:2;3630:53;3675:7;3666:6;3655:9;3651:22;3630:53;:::i;:::-;3620:63;;3575:118;3760:2;3749:9;3745:18;3732:32;3791:18;3783:6;3780:30;3777:117;;;3813:79;;:::i;:::-;3777:117;3926:64;3982:7;3973:6;3962:9;3958:22;3926:64;:::i;:::-;3908:82;;;;3703:297;3044:963;;;;;;;;:::o;4013:149::-;4049:7;4089:66;4082:5;4078:78;4067:89;;4013:149;;;:::o;4168:115::-;4253:23;4270:5;4253:23;:::i;:::-;4248:3;4241:36;4168:115;;:::o;4289:218::-;4380:4;4418:2;4407:9;4403:18;4395:26;;4431:69;4497:1;4486:9;4482:17;4473:6;4431:69;:::i;:::-;4289:218;;;;:::o;4513:329::-;4572:6;4621:2;4609:9;4600:7;4596:23;4592:32;4589:119;;;4627:79;;:::i;:::-;4589:119;4747:1;4772:53;4817:7;4808:6;4797:9;4793:22;4772:53;:::i;:::-;4762:63;;4718:117;4513:329;;;;:::o;4848:118::-;4935:24;4953:5;4935:24;:::i;:::-;4930:3;4923:37;4848:118;;:::o;4972:222::-;5065:4;5103:2;5092:9;5088:18;5080:26;;5116:71;5184:1;5173:9;5169:17;5160:6;5116:71;:::i;:::-;4972:222;;;;:::o;5200:60::-;5228:3;5249:5;5242:12;;5200:60;;;:::o;5266:142::-;5316:9;5349:53;5367:34;5376:24;5394:5;5376:24;:::i;:::-;5367:34;:::i;:::-;5349:53;:::i;:::-;5336:66;;5266:142;;;:::o;5414:126::-;5464:9;5497:37;5528:5;5497:37;:::i;:::-;5484:50;;5414:126;;;:::o;5546:141::-;5611:9;5644:37;5675:5;5644:37;:::i;:::-;5631:50;;5546:141;;;:::o;5693:161::-;5795:52;5841:5;5795:52;:::i;:::-;5790:3;5783:65;5693:161;;:::o;5860:252::-;5968:4;6006:2;5995:9;5991:18;5983:26;;6019:86;6102:1;6091:9;6087:17;6078:6;6019:86;:::i;:::-;5860:252;;;;:::o;6118:118::-;6205:24;6223:5;6205:24;:::i;:::-;6200:3;6193:37;6118:118;;:::o;6242:222::-;6335:4;6373:2;6362:9;6358:18;6350:26;;6386:71;6454:1;6443:9;6439:17;6430:6;6386:71;:::i;:::-;6242:222;;;;:::o;6470:619::-;6547:6;6555;6563;6612:2;6600:9;6591:7;6587:23;6583:32;6580:119;;;6618:79;;:::i;:::-;6580:119;6738:1;6763:53;6808:7;6799:6;6788:9;6784:22;6763:53;:::i;:::-;6753:63;;6709:117;6865:2;6891:53;6936:7;6927:6;6916:9;6912:22;6891:53;:::i;:::-;6881:63;;6836:118;6993:2;7019:53;7064:7;7055:6;7044:9;7040:22;7019:53;:::i;:::-;7009:63;;6964:118;6470:619;;;;;:::o;7095:143::-;7152:5;7183:6;7177:13;7168:22;;7199:33;7226:5;7199:33;:::i;:::-;7095:143;;;;:::o;7244:351::-;7314:6;7363:2;7351:9;7342:7;7338:23;7334:32;7331:119;;;7369:79;;:::i;:::-;7331:119;7489:1;7514:64;7570:7;7561:6;7550:9;7546:22;7514:64;:::i;:::-;7504:74;;7460:128;7244:351;;;;:::o;7601:442::-;7750:4;7788:2;7777:9;7773:18;7765:26;;7801:71;7869:1;7858:9;7854:17;7845:6;7801:71;:::i;:::-;7882:72;7950:2;7939:9;7935:18;7926:6;7882:72;:::i;:::-;7964;8032:2;8021:9;8017:18;8008:6;7964:72;:::i;:::-;7601:442;;;;;;:::o;8049:169::-;8133:11;8167:6;8162:3;8155:19;8207:4;8202:3;8198:14;8183:29;;8049:169;;;;:::o;8224:164::-;8364:16;8360:1;8352:6;8348:14;8341:40;8224:164;:::o;8394:366::-;8536:3;8557:67;8621:2;8616:3;8557:67;:::i;:::-;8550:74;;8633:93;8722:3;8633:93;:::i;:::-;8751:2;8746:3;8742:12;8735:19;;8394:366;;;:::o;8766:419::-;8932:4;8970:2;8959:9;8955:18;8947:26;;9019:9;9013:4;9009:20;9005:1;8994:9;8990:17;8983:47;9047:131;9173:4;9047:131;:::i;:::-;9039:139;;8766:419;;;:::o;9191:147::-;9292:11;9329:3;9314:18;;9191:147;;;;:::o;9344:114::-;;:::o;9464:398::-;9623:3;9644:83;9725:1;9720:3;9644:83;:::i;:::-;9637:90;;9736:93;9825:3;9736:93;:::i;:::-;9854:1;9849:3;9845:11;9838:18;;9464:398;;;:::o;9868:379::-;10052:3;10074:147;10217:3;10074:147;:::i;:::-;10067:154;;10238:3;10231:10;;9868:379;;;:::o;10253:170::-;10393:22;10389:1;10381:6;10377:14;10370:46;10253:170;:::o;10429:366::-;10571:3;10592:67;10656:2;10651:3;10592:67;:::i;:::-;10585:74;;10668:93;10757:3;10668:93;:::i;:::-;10786:2;10781:3;10777:12;10770:19;;10429:366;;;:::o;10801:419::-;10967:4;11005:2;10994:9;10990:18;10982:26;;11054:9;11048:4;11044:20;11040:1;11029:9;11025:17;11018:47;11082:131;11208:4;11082:131;:::i;:::-;11074:139;;10801:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"701200","executionCost":"710","totalCost":"701910"},"external":{"checkNftOwner(address,uint256)":"infinite","collectLoan()":"infinite","fund()":"356","giveLoan(address,uint256,uint256)":"infinite","nft()":"infinite","onERC721Received(address,address,uint256,bytes)":"infinite","ownerNft(uint256)":"infinite"}},"methodIdentifiers":{"checkNftOwner(address,uint256)":"0abeb5f6","collectLoan()":"b0857bb4","fund()":"b60d4288","giveLoan(address,uint256,uint256)":"c4b5a990","nft()":"47ccca02","onERC721Received(address,address,uint256,bytes)":"150b7a02","ownerNft(uint256)":"21381d37"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"invalid_amt\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Loaners\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Payers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Received\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAdddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"checkNftOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectLoan\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"giveLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerNft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Handle the receipt of a NFT. The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Returns `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))` unless throwing.\",\"params\":{\"_data\":\"Additional data with no specified format.\",\"_from\":\"The address which previously owned the token.\",\"_operator\":\"The address which called `safeTransferFrom` function.\",\"_tokenId\":\"The NFT identifier which is being transferred.\"},\"returns\":{\"_0\":\"Returns `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"The contract address is always the message sender. A wallet/broker/auction application MUST implement the wallet interface if it will accept safe transfers.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/loan.sol\":\"loan\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/loan.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.19;\\nerror invalid_amt();\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ninterface ERC721TokenReceiver\\n{\\n\\n  /**\\n   * @notice The contract address is always the message sender. A wallet/broker/auction application\\n   * MUST implement the wallet interface if it will accept safe transfers.\\n   * @dev Handle the receipt of a NFT. The ERC721 smart contract calls this function on the\\n   * recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return\\n   * of other than the magic value MUST result in the transaction being reverted.\\n   * Returns `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))` unless throwing.\\n   * @param _operator The address which called `safeTransferFrom` function.\\n   * @param _from The address which previously owned the token.\\n   * @param _tokenId The NFT identifier which is being transferred.\\n   * @param _data Additional data with no specified format.\\n   * @return Returns `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\\n   */\\n  function onERC721Received(\\n    address _operator,\\n    address _from,\\n    uint256 _tokenId,\\n    bytes calldata _data\\n  )\\n    external\\n    returns(bytes4);\\n\\n}\\ncontract loan is\\n  ERC721TokenReceiver {\\n    IERC721 public nft;\\n      event Received();\\n    event Loaners(address indexed nft, uint indexed tokenId, uint indexed amt);\\n    event Payers(address indexed nft, uint indexed tokenId, uint indexed amt);\\n    struct loaner {\\n        address nft;\\n        uint tokenId;\\n        uint amt;\\n    }\\n\\n    mapping(address => loaner) loanernft;\\n\\n    constructor()payable{}\\n\\n    function giveLoan(address nftAddress, uint tokenId, uint amt) public {\\n        require(checkNftOwner(nftAddress, tokenId), \\\"transfer owner\\\");\\n        loaner memory user1 = loaner(nftAddress, tokenId, amt);\\n        loanernft[msg.sender] = user1;\\n        (bool sent /* bytes memory data*/, ) = msg.sender.call{value: amt}(\\\"\\\");\\n        emit Loaners(nftAddress, tokenId, amt);\\n        require(sent, \\\"Failed to send Ether\\\");\\n    }\\n\\n    function collectLoan() public payable {\\n        loaner memory user1 = loanernft[msg.sender];\\n        if (user1.amt > msg.value) {\\n            revert invalid_amt();\\n        }\\n\\n        IERC721 nft1 = IERC721(user1.nft);\\n        nft1.safeTransferFrom(address(this), msg.sender, user1.tokenId);\\n\\n        delete loanernft[msg.sender];\\n        emit Payers(user1.nft, user1.tokenId, user1.amt);\\n    }\\n\\n    function fund() public payable returns (uint) {\\n        return msg.value;\\n    }\\n\\n    function checkNftOwner(\\n        address nftAdddress,\\n        uint tokenId\\n    ) public returns (bool) {\\n        nft = IERC721(nftAdddress);\\n        if (nft.ownerOf(tokenId) == address(this)) {\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    function ownerNft(uint tokenId) public view returns (address) {\\n        return nft.ownerOf(tokenId);\\n    }\\n    function onERC721Received(\\n    address _operator,\\n    address _from,\\n    uint256 _tokenId,\\n    bytes calldata _data\\n  )\\n    external\\n    override\\n    returns(bytes4)\\n  {\\n    _operator;\\n    _from;\\n    _tokenId;\\n    _data;\\n    emit Received();\\n    return 0x150b7a02;\\n  }\\n}\",\"keccak256\":\"0xfe3d2371d6ae321055612550d50be10a4b595e068d20bfd5dd47c59fb67e401a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":152,"contract":"contracts/loan.sol:loan","label":"nft","offset":0,"slot":"0","type":"t_contract(IERC721)115"},{"astId":182,"contract":"contracts/loan.sol:loan","label":"loanernft","offset":0,"slot":"1","type":"t_mapping(t_address,t_struct(loaner)177_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IERC721)115":{"encoding":"inplace","label":"contract IERC721","numberOfBytes":"20"},"t_mapping(t_address,t_struct(loaner)177_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct loan.loaner)","numberOfBytes":"32","value":"t_struct(loaner)177_storage"},"t_struct(loaner)177_storage":{"encoding":"inplace","label":"struct loan.loaner","members":[{"astId":172,"contract":"contracts/loan.sol:loan","label":"nft","offset":0,"slot":"0","type":"t_address"},{"astId":174,"contract":"contracts/loan.sol:loan","label":"tokenId","offset":0,"slot":"1","type":"t_uint256"},{"astId":176,"contract":"contracts/loan.sol:loan","label":"amt","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"onERC721Received(address,address,uint256,bytes)":{"notice":"The contract address is always the message sender. A wallet/broker/auction application MUST implement the wallet interface if it will accept safe transfers."}},"version":1}}}}}}