{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/loan.sol:ERC721TokenReceiver": {
        "src": "contracts/loan.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/loan.sol:loan": {
        "src": "contracts/loan.sol:33",
        "version": {
          "withMetadata": "40f678a31471e3eda73d17607156a867029848a0bd2cddb44669b7f52fca350b",
          "withoutMetadata": "fd21867b9ad79800d52f2fe8ea9ddc7b5dbb0089212f67d25c90a01d782973ad",
          "linkedWithoutMetadata": "fd21867b9ad79800d52f2fe8ea9ddc7b5dbb0089212f67d25c90a01d782973ad"
        },
        "inherit": [
          "contracts/loan.sol:ERC721TokenReceiver"
        ],
        "libraries": [],
        "methods": [
          "()",
          "giveLoan(address,uint256,uint256)",
          "collectLoan()",
          "fund()",
          "checkNftOwner(address,uint256)",
          "ownerNft(uint256)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nft",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC721)115",
              "contract": "loan",
              "src": "contracts/loan.sol:35"
            },
            {
              "label": "loanernft",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(loaner)177_storage)",
              "contract": "loan",
              "src": "contracts/loan.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)115": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(loaner)177_storage)": {
              "label": "mapping(address => struct loan.loaner)",
              "numberOfBytes": "32"
            },
            "t_struct(loaner)177_storage": {
              "label": "struct loan.loaner",
              "members": [
                {
                  "label": "nft",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "contracts/Fd.sol:Fd": {
        "src": "contracts/Fd.sol:8",
        "version": {
          "withMetadata": "a040b6b7d2032f32dda4a9d84e24599f985195ee0bd3b9aa7a8b1122520702f3",
          "withoutMetadata": "0d46d7c8f866af7d2602cb10938e0042aa97a9235dcdbb00d85561f9c94ddfff",
          "linkedWithoutMetadata": "0d46d7c8f866af7d2602cb10938e0042aa97a9235dcdbb00d85561f9c94ddfff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositFund(uint256)",
          "withDrawFund(uint256)",
          "validTxid(uint256)",
          "timeToMature(uint256)",
          "client_txs()",
          "value_matureTime(uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "txId",
            "src": "contracts/Fd.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "txId",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Fd",
              "src": "contracts/Fd.sol:9"
            },
            {
              "label": "FdTime",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Fd",
              "src": "contracts/Fd.sol:15"
            },
            {
              "label": "clientTxIds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Fd",
              "src": "contracts/Fd.sol:16"
            },
            {
              "label": "txId_FdValueWithTime",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(ValuePeriod)19_storage)",
              "contract": "Fd",
              "src": "contracts/Fd.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ValuePeriod)19_storage)": {
              "label": "mapping(uint256 => struct Fd.ValuePeriod)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ValuePeriod)19_storage": {
              "label": "struct Fd.ValuePeriod",
              "members": [
                {
                  "label": "value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timePeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "contracts/Fd.sol:Fd": {
        "src": "contracts/Fd.sol:8",
        "version": {
          "withMetadata": "a040b6b7d2032f32dda4a9d84e24599f985195ee0bd3b9aa7a8b1122520702f3",
          "withoutMetadata": "0d46d7c8f866af7d2602cb10938e0042aa97a9235dcdbb00d85561f9c94ddfff",
          "linkedWithoutMetadata": "0d46d7c8f866af7d2602cb10938e0042aa97a9235dcdbb00d85561f9c94ddfff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositFund(uint256)",
          "withDrawFund(uint256)",
          "validTxid(uint256)",
          "timeToMature(uint256)",
          "client_txs()",
          "value_matureTime(uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "txId",
            "src": "contracts/Fd.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "txId",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Fd",
              "src": "contracts/Fd.sol:9"
            },
            {
              "label": "FdTime",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Fd",
              "src": "contracts/Fd.sol:15"
            },
            {
              "label": "clientTxIds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Fd",
              "src": "contracts/Fd.sol:16"
            },
            {
              "label": "txId_FdValueWithTime",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(ValuePeriod)19_storage)",
              "contract": "Fd",
              "src": "contracts/Fd.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ValuePeriod)19_storage)": {
              "label": "mapping(uint256 => struct Fd.ValuePeriod)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ValuePeriod)19_storage": {
              "label": "struct Fd.ValuePeriod",
              "members": [
                {
                  "label": "value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timePeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/loan.sol:ERC721TokenReceiver": {
        "src": "contracts/loan.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/loan.sol:loan": {
        "src": "contracts/loan.sol:33",
        "version": {
          "withMetadata": "40f678a31471e3eda73d17607156a867029848a0bd2cddb44669b7f52fca350b",
          "withoutMetadata": "fd21867b9ad79800d52f2fe8ea9ddc7b5dbb0089212f67d25c90a01d782973ad",
          "linkedWithoutMetadata": "fd21867b9ad79800d52f2fe8ea9ddc7b5dbb0089212f67d25c90a01d782973ad"
        },
        "inherit": [
          "contracts/loan.sol:ERC721TokenReceiver"
        ],
        "libraries": [],
        "methods": [
          "()",
          "giveLoan(address,uint256,uint256)",
          "collectLoan()",
          "fund()",
          "checkNftOwner(address,uint256)",
          "ownerNft(uint256)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nft",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC721)115",
              "contract": "loan",
              "src": "contracts/loan.sol:35"
            },
            {
              "label": "loanernft",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(loaner)177_storage)",
              "contract": "loan",
              "src": "contracts/loan.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)115": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(loaner)177_storage)": {
              "label": "mapping(address => struct loan.loaner)",
              "numberOfBytes": "32"
            },
            "t_struct(loaner)177_storage": {
              "label": "struct loan.loaner",
              "members": [
                {
                  "label": "nft",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/loan.sol:loan": {
        "src": "contracts/loan.sol:7",
        "version": {
          "withMetadata": "918713d8e2e2f366d1ba768d3839353d5a9046b0068c9472d13881377ce1cb67",
          "withoutMetadata": "c51e50ac982264a05c4b941c1f81fcbd06786cbf475cb7aa7396477d30f7f454",
          "linkedWithoutMetadata": "c51e50ac982264a05c4b941c1f81fcbd06786cbf475cb7aa7396477d30f7f454"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "giveLoan(address,uint256,uint256)",
          "collectLoan()",
          "fund()",
          "checkNftOwner(address,uint256)",
          "ownerNft(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nft",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC721)115",
              "contract": "loan",
              "src": "contracts/loan.sol:8"
            },
            {
              "label": "loanernft",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(loaner)158_storage)",
              "contract": "loan",
              "src": "contracts/loan.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)115": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(loaner)158_storage)": {
              "label": "mapping(address => struct loan.loaner)",
              "numberOfBytes": "32"
            },
            "t_struct(loaner)158_storage": {
              "label": "struct loan.loaner",
              "members": [
                {
                  "label": "nft",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "af0af93d726bb475f64a6f54ab83670a94b1d8be8039cb88bf9f6fe99912e4dc",
          "withoutMetadata": "c79012a1b8e68c273d95caf7ad8d0d4e75a13baec0f8a22ce9771b164e8b882c",
          "linkedWithoutMetadata": "c79012a1b8e68c273d95caf7ad8d0d4e75a13baec0f8a22ce9771b164e8b882c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f578b236eae50ce2d6e8ab578d246cd4f9163b2483d2f1ecb25f11df8a95c955",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "4f8782ff9c2b29ddd2b68feb3a64f00807db0b301176828f590bd61a3aaf960b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "297cfc0beef28d608cabbe46ede015f780d14dcc1741aebf8ba7e0c716063050",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "2ac68a4cb19b44dbb4fe724bff13b335eb045df2c823853dfa752b533371837b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/BasicNft.sol:BasicNft": {
        "src": "contracts/BasicNft.sol:6",
        "version": {
          "withMetadata": "98b1b680a1c57ba3549e30f5d32a5572676e4e234c24e5a31c96eb7cca431086",
          "withoutMetadata": "8f3c8a717f05dca21620220245fac6ea193093acbe6fffaad4355c01c9324b66",
          "linkedWithoutMetadata": "8f3c8a717f05dca21620220245fac6ea193093acbe6fffaad4355c01c9324b66"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mintNft()",
          "tokenURI(uint256)",
          "getTokenCounter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasicNft",
            "src": "contracts/BasicNft.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "s_tokenCounter",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BasicNft",
              "src": "contracts/BasicNft.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/loan.sol:loan": {
        "src": "contracts/loan.sol:7",
        "version": {
          "withMetadata": "1f5e3cecb9c2f53786db6530221319aae7eb7ecad12efb7eb0cac0e62b7e467f",
          "withoutMetadata": "016c5d3b02ce3d72dffc20f2deb02ec1f507df986cc614a3725cb377db28724d",
          "linkedWithoutMetadata": "016c5d3b02ce3d72dffc20f2deb02ec1f507df986cc614a3725cb377db28724d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "giveLoan(address,uint256,uint256)",
          "collectLoan()",
          "fund()",
          "checkNftOwner(address,uint256)",
          "ownerNft(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nft",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC721)1042",
              "contract": "loan",
              "src": "contracts/loan.sol:8"
            },
            {
              "label": "loanernft",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(loaner)2764_storage)",
              "contract": "loan",
              "src": "contracts/loan.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)1042": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(loaner)2764_storage)": {
              "label": "mapping(address => struct loan.loaner)",
              "numberOfBytes": "32"
            },
            "t_struct(loaner)2764_storage": {
              "label": "struct loan.loaner",
              "members": [
                {
                  "label": "nft",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "contracts/Fd.sol:Fd": {
        "src": "contracts/Fd.sol:8",
        "version": {
          "withMetadata": "a040b6b7d2032f32dda4a9d84e24599f985195ee0bd3b9aa7a8b1122520702f3",
          "withoutMetadata": "0d46d7c8f866af7d2602cb10938e0042aa97a9235dcdbb00d85561f9c94ddfff",
          "linkedWithoutMetadata": "0d46d7c8f866af7d2602cb10938e0042aa97a9235dcdbb00d85561f9c94ddfff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositFund(uint256)",
          "withDrawFund(uint256)",
          "validTxid(uint256)",
          "timeToMature(uint256)",
          "client_txs()",
          "value_matureTime(uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "txId",
            "src": "contracts/Fd.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "txId",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Fd",
              "src": "contracts/Fd.sol:9"
            },
            {
              "label": "FdTime",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Fd",
              "src": "contracts/Fd.sol:15"
            },
            {
              "label": "clientTxIds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Fd",
              "src": "contracts/Fd.sol:16"
            },
            {
              "label": "txId_FdValueWithTime",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(ValuePeriod)19_storage)",
              "contract": "Fd",
              "src": "contracts/Fd.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ValuePeriod)19_storage)": {
              "label": "mapping(uint256 => struct Fd.ValuePeriod)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ValuePeriod)19_storage": {
              "label": "struct Fd.ValuePeriod",
              "members": [
                {
                  "label": "value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timePeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "contracts/Fd.sol:Fd": {
        "src": "contracts/Fd.sol:7",
        "version": {
          "withMetadata": "1bfc43bb486d4d82a57e7218f7ce658b8804d08295d4bd16ae328b4c4265f2e7",
          "withoutMetadata": "b103a049fd814671547cd53def4bcf7ef2152bf65d5a68c6df3f58884fc7f5ee",
          "linkedWithoutMetadata": "b103a049fd814671547cd53def4bcf7ef2152bf65d5a68c6df3f58884fc7f5ee"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositFund(uint256)",
          "withDrawFund(uint256)",
          "validTxid(uint256)",
          "timeToMature(uint256)",
          "client_txs()",
          "value_matureTime(uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "txId",
            "src": "contracts/Fd.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "txId",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Fd",
              "src": "contracts/Fd.sol:8"
            },
            {
              "label": "FdTime",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Fd",
              "src": "contracts/Fd.sol:14"
            },
            {
              "label": "clientTxIds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Fd",
              "src": "contracts/Fd.sol:15"
            },
            {
              "label": "txId_FdValueWithTime",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(ValuePeriod)17_storage)",
              "contract": "Fd",
              "src": "contracts/Fd.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ValuePeriod)17_storage)": {
              "label": "mapping(uint256 => struct Fd.ValuePeriod)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ValuePeriod)17_storage": {
              "label": "struct Fd.ValuePeriod",
              "members": [
                {
                  "label": "value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timePeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "contracts/MultiSigWallet.sol:MultiSigWallet": {
        "src": "contracts/MultiSigWallet.sol:4",
        "version": {
          "withMetadata": "a1f10d695b13bebbd4e3251f2e1eea2d48b9e9056d7724f0dce3baf63cf40805",
          "withoutMetadata": "1841742153acc65461f4fb5938b236197dc6cf59f9da0814fd661f736065d328",
          "linkedWithoutMetadata": "1841742153acc65461f4fb5938b236197dc6cf59f9da0814fd661f736065d328"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[],uint256)",
          "()",
          "submitTransaction(address,uint256,bytes)",
          "confirmTransaction(uint256)",
          "executeTransaction(uint256)",
          "revokeConfirmation(uint256)",
          "getOwners()",
          "getTransactionCount()",
          "getTransaction(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MultiSigWallet",
            "src": "contracts/MultiSigWallet.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:17"
            },
            {
              "label": "isOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:18"
            },
            {
              "label": "numConfirmationsRequired",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:19"
            },
            {
              "label": "isConfirmed",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:30"
            },
            {
              "label": "transactions",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(Transaction)59_storage)dyn_storage",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Transaction)59_storage)dyn_storage": {
              "label": "struct MultiSigWallet.Transaction[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_struct(Transaction)59_storage": {
              "label": "struct MultiSigWallet.Transaction",
              "members": [
                {
                  "label": "to",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "numConfirmations",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "contracts/MultiSigWallet.sol:MultiSigWallet": {
        "src": "contracts/MultiSigWallet.sol:4",
        "version": {
          "withMetadata": "a1f10d695b13bebbd4e3251f2e1eea2d48b9e9056d7724f0dce3baf63cf40805",
          "withoutMetadata": "1841742153acc65461f4fb5938b236197dc6cf59f9da0814fd661f736065d328",
          "linkedWithoutMetadata": "1841742153acc65461f4fb5938b236197dc6cf59f9da0814fd661f736065d328"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[],uint256)",
          "()",
          "submitTransaction(address,uint256,bytes)",
          "confirmTransaction(uint256)",
          "executeTransaction(uint256)",
          "revokeConfirmation(uint256)",
          "getOwners()",
          "getTransactionCount()",
          "getTransaction(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MultiSigWallet",
            "src": "contracts/MultiSigWallet.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:17"
            },
            {
              "label": "isOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:18"
            },
            {
              "label": "numConfirmationsRequired",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:19"
            },
            {
              "label": "isConfirmed",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:30"
            },
            {
              "label": "transactions",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(Transaction)59_storage)dyn_storage",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Transaction)59_storage)dyn_storage": {
              "label": "struct MultiSigWallet.Transaction[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_struct(Transaction)59_storage": {
              "label": "struct MultiSigWallet.Transaction",
              "members": [
                {
                  "label": "to",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "numConfirmations",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "contracts/MultiSigWallet.sol:MultiSigWallet": {
        "src": "contracts/MultiSigWallet.sol:4",
        "version": {
          "withMetadata": "a1f10d695b13bebbd4e3251f2e1eea2d48b9e9056d7724f0dce3baf63cf40805",
          "withoutMetadata": "1841742153acc65461f4fb5938b236197dc6cf59f9da0814fd661f736065d328",
          "linkedWithoutMetadata": "1841742153acc65461f4fb5938b236197dc6cf59f9da0814fd661f736065d328"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[],uint256)",
          "()",
          "submitTransaction(address,uint256,bytes)",
          "confirmTransaction(uint256)",
          "executeTransaction(uint256)",
          "revokeConfirmation(uint256)",
          "getOwners()",
          "getTransactionCount()",
          "getTransaction(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MultiSigWallet",
            "src": "contracts/MultiSigWallet.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:17"
            },
            {
              "label": "isOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:18"
            },
            {
              "label": "numConfirmationsRequired",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:19"
            },
            {
              "label": "isConfirmed",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:30"
            },
            {
              "label": "transactions",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(Transaction)59_storage)dyn_storage",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Transaction)59_storage)dyn_storage": {
              "label": "struct MultiSigWallet.Transaction[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_struct(Transaction)59_storage": {
              "label": "struct MultiSigWallet.Transaction",
              "members": [
                {
                  "label": "to",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "numConfirmations",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/vault_monitor.sol:vault_monitor": {
        "src": "contracts/vault_monitor.sol:6",
        "version": {
          "withMetadata": "c3c65febecfa34fab30fdc80ada9caf63a00f6ea0409f17f25a1e7c459e79751",
          "withoutMetadata": "7cb303171d8b42d215babc7d7af2b81df7e2f3cd5a66b2f571fcd2dfa85b5dac",
          "linkedWithoutMetadata": "7cb303171d8b42d215babc7d7af2b81df7e2f3cd5a66b2f571fcd2dfa85b5dac"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "vaults(address)",
          "addVault(address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "userToVault",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "vault_monitor",
              "src": "contracts/vault_monitor.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "contracts/MultiSigWallet.sol:MultiSigWallet": {
        "src": "contracts/MultiSigWallet.sol:4",
        "version": {
          "withMetadata": "a1f10d695b13bebbd4e3251f2e1eea2d48b9e9056d7724f0dce3baf63cf40805",
          "withoutMetadata": "1841742153acc65461f4fb5938b236197dc6cf59f9da0814fd661f736065d328",
          "linkedWithoutMetadata": "1841742153acc65461f4fb5938b236197dc6cf59f9da0814fd661f736065d328"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[],uint256)",
          "()",
          "submitTransaction(address,uint256,bytes)",
          "confirmTransaction(uint256)",
          "executeTransaction(uint256)",
          "revokeConfirmation(uint256)",
          "getOwners()",
          "getTransactionCount()",
          "getTransaction(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MultiSigWallet",
            "src": "contracts/MultiSigWallet.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:17"
            },
            {
              "label": "isOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:18"
            },
            {
              "label": "numConfirmationsRequired",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:19"
            },
            {
              "label": "isConfirmed",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:30"
            },
            {
              "label": "transactions",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(Transaction)59_storage)dyn_storage",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Transaction)59_storage)dyn_storage": {
              "label": "struct MultiSigWallet.Transaction[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_struct(Transaction)59_storage": {
              "label": "struct MultiSigWallet.Transaction",
              "members": [
                {
                  "label": "to",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "numConfirmations",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/vault_monitor.sol:vault_monitor": {
        "src": "contracts/vault_monitor.sol:6",
        "version": {
          "withMetadata": "c3c65febecfa34fab30fdc80ada9caf63a00f6ea0409f17f25a1e7c459e79751",
          "withoutMetadata": "7cb303171d8b42d215babc7d7af2b81df7e2f3cd5a66b2f571fcd2dfa85b5dac",
          "linkedWithoutMetadata": "7cb303171d8b42d215babc7d7af2b81df7e2f3cd5a66b2f571fcd2dfa85b5dac"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "vaults(address)",
          "addVault(address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "userToVault",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "vault_monitor",
              "src": "contracts/vault_monitor.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "contracts/MultiSigWallet.sol:MultiSigWallet": {
        "src": "contracts/MultiSigWallet.sol:4",
        "version": {
          "withMetadata": "a1f10d695b13bebbd4e3251f2e1eea2d48b9e9056d7724f0dce3baf63cf40805",
          "withoutMetadata": "1841742153acc65461f4fb5938b236197dc6cf59f9da0814fd661f736065d328",
          "linkedWithoutMetadata": "1841742153acc65461f4fb5938b236197dc6cf59f9da0814fd661f736065d328"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[],uint256)",
          "()",
          "submitTransaction(address,uint256,bytes)",
          "confirmTransaction(uint256)",
          "executeTransaction(uint256)",
          "revokeConfirmation(uint256)",
          "getOwners()",
          "getTransactionCount()",
          "getTransaction(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MultiSigWallet",
            "src": "contracts/MultiSigWallet.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:17"
            },
            {
              "label": "isOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:18"
            },
            {
              "label": "numConfirmationsRequired",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:19"
            },
            {
              "label": "isConfirmed",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:30"
            },
            {
              "label": "transactions",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(Transaction)59_storage)dyn_storage",
              "contract": "MultiSigWallet",
              "src": "contracts/MultiSigWallet.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Transaction)59_storage)dyn_storage": {
              "label": "struct MultiSigWallet.Transaction[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_struct(Transaction)59_storage": {
              "label": "struct MultiSigWallet.Transaction",
              "members": [
                {
                  "label": "to",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "numConfirmations",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/vault_monitor.sol:vault_monitor": {
        "src": "contracts/vault_monitor.sol:6",
        "version": {
          "withMetadata": "fbfb88ed01c9d1a7877dda43c98747553f8a9114f47b21a42127d5dddfcb5a3b",
          "withoutMetadata": "41e34389f6712c3b90b0ed4b587a804f33c232e7db99007ae81a7f7698f5e0b7",
          "linkedWithoutMetadata": "41e34389f6712c3b90b0ed4b587a804f33c232e7db99007ae81a7f7698f5e0b7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "vaults(address)",
          "addVault(address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "userToVault",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "vault_monitor",
              "src": "contracts/vault_monitor.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "contracts/testing2.sol:testing2": {
        "src": "contracts/testing2.sol:8",
        "version": {
          "withMetadata": "2c8eadcf4e67f0d4f19dc7ab68464f01a82abea050cf813aefc3420b860798f1",
          "withoutMetadata": "82ee5e541743929730f7b992a317850099f427cb788175d958f0d271e08af2ca",
          "linkedWithoutMetadata": "82ee5e541743929730f7b992a317850099f427cb788175d958f0d271e08af2ca"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address payable)",
          "increment()",
          "decrement()",
          "getter()",
          "withdraw()",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "testing2",
            "src": "contracts/testing2.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "c",
            "src": "contracts/testing2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address_payable",
              "contract": "testing2",
              "src": "contracts/testing2.sol:11"
            },
            {
              "label": "c",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "testing2",
              "src": "contracts/testing2.sol:12"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "c24d8879cfc55ddae906317a41742f9b8f6669166483bde953a3447028f44860",
          "withoutMetadata": "c24d8879cfc55ddae906317a41742f9b8f6669166483bde953a3447028f44860",
          "linkedWithoutMetadata": "c24d8879cfc55ddae906317a41742f9b8f6669166483bde953a3447028f44860"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "69257dcea96ebd3cfdfdde0fa227eb246d02f98435b5a3ab0517071666956a7a",
          "withoutMetadata": "8aec19119629d97066e6eb56f308bf3bc91bd56fd753a6969955f06ccb0cf43c",
          "linkedWithoutMetadata": "8aec19119629d97066e6eb56f308bf3bc91bd56fd753a6969955f06ccb0cf43c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "cae4e88344072b2a199f25a34240763874c440a3b18f42fea332c8eb34ee04af",
          "withoutMetadata": "cae4e88344072b2a199f25a34240763874c440a3b18f42fea332c8eb34ee04af",
          "linkedWithoutMetadata": "cae4e88344072b2a199f25a34240763874c440a3b18f42fea332c8eb34ee04af"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f578b236eae50ce2d6e8ab578d246cd4f9163b2483d2f1ecb25f11df8a95c955",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "6627a4d5ac0ab4bb02baa09ec4a7616f04a51a7dc99d94ca5049a279a227727a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "contracts/test/proxy/testingProxyAdmin.sol:testingProxyAdmin": {
        "src": "contracts/test/proxy/testingProxyAdmin.sol:7",
        "version": {
          "withMetadata": "8be3eaeebe6c02e6a2fae017ea0295658b48ff2380929cea4579ec2b68a11361",
          "withoutMetadata": "5cf50141be3057aa258e050a9dd9101fd83a789feaa3e4ff9d6d03c8c2fd5b0c",
          "linkedWithoutMetadata": "5cf50141be3057aa258e050a9dd9101fd83a789feaa3e4ff9d6d03c8c2fd5b0c"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "testingProxyAdmin",
            "src": "contracts/test/proxy/testingProxyAdmin.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "contracts/testing.sol:testing": {
        "src": "contracts/testing.sol:8",
        "version": {
          "withMetadata": "1e40a29722d67ea7d35ec45dd17fbd71bdafbb75590ab69e74337211218b4331",
          "withoutMetadata": "03f5561db341979a855b47cca82f58cc21fe2b2cd79f74d648e813fd11ee6814",
          "linkedWithoutMetadata": "03f5561db341979a855b47cca82f58cc21fe2b2cd79f74d648e813fd11ee6814"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address payable)",
          "increment()",
          "decrement()",
          "getter()",
          "withdraw()",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "testing",
            "src": "contracts/testing.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "c",
            "src": "contracts/testing.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address_payable",
              "contract": "testing",
              "src": "contracts/testing.sol:11"
            },
            {
              "label": "c",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "testing",
              "src": "contracts/testing.sol:12"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/testing2.sol:testing2": {
        "src": "contracts/testing2.sol:8",
        "version": {
          "withMetadata": "cbe6cfdd5363adc32c3fe439d1ab1938417f790437de39028c7fa45ca0bc4b4c",
          "withoutMetadata": "03f5561db341979a855b47cca82f58cc21fe2b2cd79f74d648e813fd11ee6814",
          "linkedWithoutMetadata": "03f5561db341979a855b47cca82f58cc21fe2b2cd79f74d648e813fd11ee6814"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address payable)",
          "increment()",
          "decrement()",
          "getter()",
          "withdraw()",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "testing2",
            "src": "contracts/testing2.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "c",
            "src": "contracts/testing2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address_payable",
              "contract": "testing2",
              "src": "contracts/testing2.sol:11"
            },
            {
              "label": "c",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "testing2",
              "src": "contracts/testing2.sol:12"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    }
  ]
}