{
  "address": "0x87fA6dFD6D6f3195490680ba5104d892D267b48c",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Invalid_amount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txId",
          "type": "uint256"
        }
      ],
      "name": "invalidId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "no_account",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "not_matured",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "client_txs",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "depositFund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txId",
          "type": "uint256"
        }
      ],
      "name": "timeToMature",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txId",
          "type": "uint256"
        }
      ],
      "name": "validTxid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txId",
          "type": "uint256"
        }
      ],
      "name": "value_matureTime",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timePeriod",
              "type": "uint256"
            }
          ],
          "internalType": "struct Fd.ValuePeriod",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txId",
          "type": "uint256"
        }
      ],
      "name": "withDrawFund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe89b4b1d9b0a4e24e369db1af7fda375a6df06c1630f575344a3801e191ebad2",
  "receipt": {
    "to": null,
    "from": "0x26A2EAC33dB1E0f4F5CA8Ac80a338eF50e9C989f",
    "contractAddress": "0x87fA6dFD6D6f3195490680ba5104d892D267b48c",
    "transactionIndex": 1,
    "gasUsed": "901441",
    "logsBloom": "0x
    "blockHash": "0x0dcca9f76440b795171893cff4df723470a83f3de30a75edf3f3af90d641615f",
    "transactionHash": "0xe89b4b1d9b0a4e24e369db1af7fda375a6df06c1630f575344a3801e191ebad2",
    "logs": [],
    "blockNumber": 4127098,
    "cumulativeGasUsed": "1005081",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "cbcfb92d2b968138e9d461bcf3253331",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Invalid_amount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txId\",\"type\":\"uint256\"}],\"name\":\"invalidId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"no_account\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"not_matured\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"client_txs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"depositFund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txId\",\"type\":\"uint256\"}],\"name\":\"timeToMature\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txId\",\"type\":\"uint256\"}],\"name\":\"validTxid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txId\",\"type\":\"uint256\"}],\"name\":\"value_matureTime\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timePeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct Fd.ValuePeriod\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txId\",\"type\":\"uint256\"}],\"name\":\"withDrawFund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fd.sol\":\"Fd\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Fd.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\nerror invalidId(uint _txId);\\nerror not_matured();\\nerror no_account();\\nerror Invalid_amount();\\ncontract Fd {\\n    uint txId = 0;\\n    struct ValuePeriod {\\n        uint value;\\n        uint timePeriod;\\n    }\\n\\n    mapping(address => mapping(uint => uint)) FdTime;\\n    mapping(address => uint[]) clientTxIds;\\n    mapping(uint => ValuePeriod) txId_FdValueWithTime;\\n\\n    constructor() {}\\n\\n    function depositFund(uint time) external payable {\\n        if(msg.value<=0) revert Invalid_amount();\\n        txId++;\\n        //time period to mature is set\\n        FdTime[msg.sender][txId] = block.timestamp + time;\\n        //txId added to client address\\n        clientTxIds[msg.sender].push(txId);\\n\\n        ValuePeriod memory v1 = ValuePeriod(msg.value, time);\\n        //txId mapped to value with time\\n        txId_FdValueWithTime[txId] = v1;\\n    }\\n\\n    function withDrawFund(uint _txId) external payable {\\n        //check for valid txId;\\n        bool f = validTxid(_txId);\\n        if (f == false) {\\n            revert invalidId(_txId);\\n        }\\n        uint matureTime = FdTime[msg.sender][_txId];\\n        if (block.timestamp > matureTime) {\\n            ValuePeriod memory v1 = txId_FdValueWithTime[_txId];\\n            uint interest = 0;\\n            if (v1.timePeriod >= 15 && v1.timePeriod < 30) {\\n                interest = (4 * v1.value) / 100;\\n            } else if (v1.timePeriod >= 30) {\\n                interest = (7 * v1.value) / 100;\\n            }\\n            uint matureAmt = v1.value + interest;\\n            bool isDelete = deleleTxId(_txId);\\n            if (isDelete) {\\n                (bool sent /* bytes memory data */, ) = msg.sender.call{\\n                    value: matureAmt\\n                }(\\\"\\\");\\n                require(sent, \\\"Failed to send Ether\\\");\\n            }\\n        } else {\\n            revert not_matured();\\n        }\\n    }\\n\\n    function deleleTxId(uint _txId) internal returns (bool) {\\n        uint[] storage client_txIds = clientTxIds[msg.sender];\\n\\n        uint f = client_txIds.length;\\n\\n        for (uint i = 0; i < client_txIds.length; i++) {\\n            if (_txId == client_txIds[i]) {\\n                f = i;\\n                break;\\n            }\\n        }\\n        if (f != client_txIds.length) {\\n            delete client_txIds[f];\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    function validTxid(uint _txId) public view returns (bool) {\\n        uint[] memory client_txIds = clientTxIds[msg.sender];\\n        if(client_txIds.length==0){\\n            revert no_account();\\n        }\\n\\n        bool f = true;\\n\\n        for (uint i = 0; i < client_txIds.length; i++) {\\n            if (_txId == client_txIds[i]) {\\n                f = true;\\n                break;\\n            }\\n        }\\n        return f;\\n    }\\n\\n    function timeToMature(uint _txId) external view returns (int) {\\n        require(validTxid(_txId), \\\"invalid id\\\");\\n        if((FdTime[msg.sender][_txId] <block.timestamp)){\\n            return -1;\\n        }else{\\n            return int(FdTime[msg.sender][_txId] - block.timestamp);\\n        }\\n    }\\n\\n    function client_txs() external view returns (uint[] memory) {\\n        return clientTxIds[msg.sender];\\n    }\\n\\n    function value_matureTime(\\n        uint _txId\\n    ) public view returns (ValuePeriod memory) {\\n        require(validTxid(_txId), \\\"invalid Id\\\");\\n        return txId_FdValueWithTime[_txId];\\n    }\\n\\n    fallback() external payable {\\n        \\n    }\\n\\n    receive() external payable {\\n       \\n    }\\n}\\n\",\"keccak256\":\"0x3c598ab1c3122a409b445515ce53f3126c79f7fd76b6d2825c35a7ede7e41a81\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526000805534801561001457600080fd5b50610f62806100246000396000f3fe6080604052600436106100595760003560e01c806348a0342c14610062578063585e5d201461009f5780636c47161d146100bb578063b5ad18b0146100f8578063d7e389f614610114578063f47045401461013f57610060565b3661006057005b005b34801561006e57600080fd5b50610089600480360381019061008491906109f6565b61017c565b6040516100969190610a3c565b60405180910390f35b6100b960048036038101906100b491906109f6565b6102aa565b005b3480156100c757600080fd5b506100e260048036038101906100dd91906109f6565b61040d565b6040516100ef9190610a95565b60405180910390f35b610112600480360381019061010d91906109f6565b610496565b005b34801561012057600080fd5b50610129610705565b6040516101369190610b5f565b60405180910390f35b34801561014b57600080fd5b50610166600480360381019061016191906109f6565b61079a565b6040516101739190610b9c565b60405180910390f35b60006101878261079a565b6101c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bd90610c14565b60405180910390fd5b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015610246577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90506102a5565b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020546102a29190610c63565b90505b919050565b600034116102e4576040517fa6a1df0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808154809291906102f690610c97565b919050555080426103079190610cdf565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008054815260200190815260200160002081905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005490806001815401808255809150506001900390600052602060002001600090919091909150556000604051806040016040528034815260200183815250905080600360008054815260200190815260200160002060008201518160000155602082015181600101559050505050565b6104156109a1565b61041e8261079a565b61045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490610d5f565b60405180910390fd5b60036000838152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050919050565b60006104a18261079a565b905060001515811515036104ec57816040517f8a0c82980000000000000000000000000000000000000000000000000000000081526004016104e39190610d8e565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020549050804211156106ce576000600360008581526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000600f82602001511015801561059a5750601e8260200151105b156105c3576064826000015160046105b29190610da9565b6105bc9190610e1a565b90506105f0565b601e8260200151106105ef576064826000015160076105e29190610da9565b6105ec9190610e1a565b90505b5b60008183600001516106029190610cdf565b9050600061060f876108c2565b905080156106c55760003373ffffffffffffffffffffffffffffffffffffffff168360405161063d90610e7c565b60006040518083038185875af1925050503d806000811461067a576040519150601f19603f3d011682016040523d82523d6000602084013e61067f565b606091505b50509050806106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba90610edd565b60405180910390fd5b505b50505050610700565b6040517f6d5296c800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561079057602002820191906000526020600020905b81548152602001906001019080831161077c575b5050505050905090565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561082657602002820191906000526020600020905b815481526020019060010190808311610812575b505050505090506000815103610868576040517f491dac4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001905060005b82518110156108b75782818151811061088d5761088c610efd565b5b602002602001015185036108a457600191506108b7565b80806108af90610c97565b915050610871565b508092505050919050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008180549050905060005b828054905081101561095d5782818154811061093157610930610efd565b5b9060005260206000200154850361094a5780915061095d565b808061095590610c97565b915050610912565b50818054905081146109955781818154811061097c5761097b610efd565b5b906000526020600020016000905560019250505061099c565b6000925050505b919050565b604051806040016040528060008152602001600081525090565b600080fd5b6000819050919050565b6109d3816109c0565b81146109de57600080fd5b50565b6000813590506109f0816109ca565b92915050565b600060208284031215610a0c57610a0b6109bb565b5b6000610a1a848285016109e1565b91505092915050565b6000819050919050565b610a3681610a23565b82525050565b6000602082019050610a516000830184610a2d565b92915050565b610a60816109c0565b82525050565b604082016000820151610a7c6000850182610a57565b506020820151610a8f6020850182610a57565b50505050565b6000604082019050610aaa6000830184610a66565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610ae88383610a57565b60208301905092915050565b6000602082019050919050565b6000610b0c82610ab0565b610b168185610abb565b9350610b2183610acc565b8060005b83811015610b52578151610b398882610adc565b9750610b4483610af4565b925050600181019050610b25565b5085935050505092915050565b60006020820190508181036000830152610b798184610b01565b905092915050565b60008115159050919050565b610b9681610b81565b82525050565b6000602082019050610bb16000830184610b8d565b92915050565b600082825260208201905092915050565b7f696e76616c696420696400000000000000000000000000000000000000000000600082015250565b6000610bfe600a83610bb7565b9150610c0982610bc8565b602082019050919050565b60006020820190508181036000830152610c2d81610bf1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6e826109c0565b9150610c79836109c0565b9250828203905081811115610c9157610c90610c34565b5b92915050565b6000610ca2826109c0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cd457610cd3610c34565b5b600182019050919050565b6000610cea826109c0565b9150610cf5836109c0565b9250828201905080821115610d0d57610d0c610c34565b5b92915050565b7f696e76616c696420496400000000000000000000000000000000000000000000600082015250565b6000610d49600a83610bb7565b9150610d5482610d13565b602082019050919050565b60006020820190508181036000830152610d7881610d3c565b9050919050565b610d88816109c0565b82525050565b6000602082019050610da36000830184610d7f565b92915050565b6000610db4826109c0565b9150610dbf836109c0565b9250828202610dcd816109c0565b91508282048414831517610de457610de3610c34565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e25826109c0565b9150610e30836109c0565b925082610e4057610e3f610deb565b5b828204905092915050565b600081905092915050565b50565b6000610e66600083610e4b565b9150610e7182610e56565b600082019050919050565b6000610e8782610e59565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610ec7601483610bb7565b9150610ed282610e91565b602082019050919050565b60006020820190508181036000830152610ef681610eba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220ce668be107b77ac92d9e83ed8a2f83fc75b7a76a925208672f955c5b288ea3cc64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c806348a0342c14610062578063585e5d201461009f5780636c47161d146100bb578063b5ad18b0146100f8578063d7e389f614610114578063f47045401461013f57610060565b3661006057005b005b34801561006e57600080fd5b50610089600480360381019061008491906109f6565b61017c565b6040516100969190610a3c565b60405180910390f35b6100b960048036038101906100b491906109f6565b6102aa565b005b3480156100c757600080fd5b506100e260048036038101906100dd91906109f6565b61040d565b6040516100ef9190610a95565b60405180910390f35b610112600480360381019061010d91906109f6565b610496565b005b34801561012057600080fd5b50610129610705565b6040516101369190610b5f565b60405180910390f35b34801561014b57600080fd5b50610166600480360381019061016191906109f6565b61079a565b6040516101739190610b9c565b60405180910390f35b60006101878261079a565b6101c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bd90610c14565b60405180910390fd5b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015610246577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90506102a5565b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020546102a29190610c63565b90505b919050565b600034116102e4576040517fa6a1df0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808154809291906102f690610c97565b919050555080426103079190610cdf565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008054815260200190815260200160002081905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005490806001815401808255809150506001900390600052602060002001600090919091909150556000604051806040016040528034815260200183815250905080600360008054815260200190815260200160002060008201518160000155602082015181600101559050505050565b6104156109a1565b61041e8261079a565b61045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490610d5f565b60405180910390fd5b60036000838152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050919050565b60006104a18261079a565b905060001515811515036104ec57816040517f8a0c82980000000000000000000000000000000000000000000000000000000081526004016104e39190610d8e565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020549050804211156106ce576000600360008581526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000600f82602001511015801561059a5750601e8260200151105b156105c3576064826000015160046105b29190610da9565b6105bc9190610e1a565b90506105f0565b601e8260200151106105ef576064826000015160076105e29190610da9565b6105ec9190610e1a565b90505b5b60008183600001516106029190610cdf565b9050600061060f876108c2565b905080156106c55760003373ffffffffffffffffffffffffffffffffffffffff168360405161063d90610e7c565b60006040518083038185875af1925050503d806000811461067a576040519150601f19603f3d011682016040523d82523d6000602084013e61067f565b606091505b50509050806106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba90610edd565b60405180910390fd5b505b50505050610700565b6040517f6d5296c800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561079057602002820191906000526020600020905b81548152602001906001019080831161077c575b5050505050905090565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561082657602002820191906000526020600020905b815481526020019060010190808311610812575b505050505090506000815103610868576040517f491dac4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001905060005b82518110156108b75782818151811061088d5761088c610efd565b5b602002602001015185036108a457600191506108b7565b80806108af90610c97565b915050610871565b508092505050919050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008180549050905060005b828054905081101561095d5782818154811061093157610930610efd565b5b9060005260206000200154850361094a5780915061095d565b808061095590610c97565b915050610912565b50818054905081146109955781818154811061097c5761097b610efd565b5b906000526020600020016000905560019250505061099c565b6000925050505b919050565b604051806040016040528060008152602001600081525090565b600080fd5b6000819050919050565b6109d3816109c0565b81146109de57600080fd5b50565b6000813590506109f0816109ca565b92915050565b600060208284031215610a0c57610a0b6109bb565b5b6000610a1a848285016109e1565b91505092915050565b6000819050919050565b610a3681610a23565b82525050565b6000602082019050610a516000830184610a2d565b92915050565b610a60816109c0565b82525050565b604082016000820151610a7c6000850182610a57565b506020820151610a8f6020850182610a57565b50505050565b6000604082019050610aaa6000830184610a66565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610ae88383610a57565b60208301905092915050565b6000602082019050919050565b6000610b0c82610ab0565b610b168185610abb565b9350610b2183610acc565b8060005b83811015610b52578151610b398882610adc565b9750610b4483610af4565b925050600181019050610b25565b5085935050505092915050565b60006020820190508181036000830152610b798184610b01565b905092915050565b60008115159050919050565b610b9681610b81565b82525050565b6000602082019050610bb16000830184610b8d565b92915050565b600082825260208201905092915050565b7f696e76616c696420696400000000000000000000000000000000000000000000600082015250565b6000610bfe600a83610bb7565b9150610c0982610bc8565b602082019050919050565b60006020820190508181036000830152610c2d81610bf1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6e826109c0565b9150610c79836109c0565b9250828203905081811115610c9157610c90610c34565b5b92915050565b6000610ca2826109c0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cd457610cd3610c34565b5b600182019050919050565b6000610cea826109c0565b9150610cf5836109c0565b9250828201905080821115610d0d57610d0c610c34565b5b92915050565b7f696e76616c696420496400000000000000000000000000000000000000000000600082015250565b6000610d49600a83610bb7565b9150610d5482610d13565b602082019050919050565b60006020820190508181036000830152610d7881610d3c565b9050919050565b610d88816109c0565b82525050565b6000602082019050610da36000830184610d7f565b92915050565b6000610db4826109c0565b9150610dbf836109c0565b9250828202610dcd816109c0565b91508282048414831517610de457610de3610c34565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e25826109c0565b9150610e30836109c0565b925082610e4057610e3f610deb565b5b828204905092915050565b600081905092915050565b50565b6000610e66600083610e4b565b9150610e7182610e56565b600082019050919050565b6000610e8782610e59565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610ec7601483610bb7565b9150610ed282610e91565b602082019050919050565b60006020820190508181036000830152610ef681610eba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220ce668be107b77ac92d9e83ed8a2f83fc75b7a76a925208672f955c5b288ea3cc64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 14,
        "contract": "contracts/Fd.sol:Fd",
        "label": "txId",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 25,
        "contract": "contracts/Fd.sol:Fd",
        "label": "FdTime",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 30,
        "contract": "contracts/Fd.sol:Fd",
        "label": "clientTxIds",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 35,
        "contract": "contracts/Fd.sol:Fd",
        "label": "txId_FdValueWithTime",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(ValuePeriod)19_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(ValuePeriod)19_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Fd.ValuePeriod)",
        "numberOfBytes": "32",
        "value": "t_struct(ValuePeriod)19_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(ValuePeriod)19_storage": {
        "encoding": "inplace",
        "label": "struct Fd.ValuePeriod",
        "members": [
          {
            "astId": 16,
            "contract": "contracts/Fd.sol:Fd",
            "label": "value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 18,
            "contract": "contracts/Fd.sol:Fd",
            "label": "timePeriod",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}